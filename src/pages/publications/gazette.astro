---
import Layout from '../../layouts/Layout.astro';
import Navbar from "../../components/Navbar";
import MainVideo from "../../components/MainVideo.astro";
import FooterNav from "../../components/FooterNav.astro";
import Footer from "../../components/Footer.astro";
import GazetteTab from "../../components/GazetteTab";
import '../../styles/css/global.css';
import '../../styles/css/globalanimate.css';

const currentPath = Astro.url.pathname;

import { urlForImage } from '../../api/api';

import { getYear } from '../../js/date';
import { getWordMonth } from '../../js/date';
import { get3LettersMonth } from '../../js/date';
import { getDay } from '../../js/date';

import { getLatestGazette } from '../../api/api';
import { getYearGazette } from '../../api/api';
import { getAllGazette } from '../../api/api';

// Fetch data with error handling
const fetchData = async (fetchFunction, fallbackData) => {
  try {
    return await fetchFunction();
  } catch (error) {
    console.error('Error fetching data:', error);
    return fallbackData;
  }
};

const latestGazette = await fetchData(getLatestGazette, {
  title: 'Fallback Title',
  publishedAt: new Date().toISOString(),
  mainImage: { asset: { url: '/fallback-image.jpg' } },
  body: [{ children: [{ text: 'Fallback content' }] }],
  gazetteQuarter: { gazetteQuarter: 'Q1' },
  file: { asset: { url: '#' } }
});

const yearGazette = await fetchData(getYearGazette, []);

const allGazette = await fetchData(getAllGazette, []);

// State for filtering
const uniqueYears = [...new Set(allGazette.map(gazette => getYear(gazette.publishedAt)))];
const uniqueQuarters = ['All', 'January', 'February', 'March', 'April','May','June','July','August','September','October','November','December'];
---

<Layout title="MSU | Tawi-Tawi College of Technology and Oceanography">
    <main class="bg-white">
        <Navbar path={currentPath} client:visible />

        <!-- Hero Section -->
        <div class="relative pt-24 pb-12 bg-white">
            <div class="absolute inset-0 overflow-hidden">
                <div class="absolute inset-0 bg-gradient-to-r from-msu-light-blue/10 to-white"></div>
                <div class="absolute top-0 right-0 w-1/2 h-full bg-msu-blue/5 -skew-x-12 transform origin-top-right"></div>
            </div>
            
            <div class="container mx-auto px-4 xl:px-0 relative">
                <!-- Breadcrumb -->
                <div class="mb-8">
                    <p class="paragraph p2 text-gray-600">
                        <a href="/home" class="hover:text-msu-blue transition-colors">Home</a> / 
                        <a href="/publications" class="hover:text-msu-blue transition-colors">Publications</a> / 
                        <span class="text-msu-blue font-medium">Gazette</span>
                    </p>
                </div>

                <!-- Hero Content -->
                <div class="text-center mb-12">
                    <h1 class="headings text-5xl font-bold text-msu-main-color  mb-6">Gazette</h1>
                    <div class="w-24 h-1.5 bg-msu-deep-ocean mx-auto mb-6"></div>
                    <p class="paragraph p2 text-gray-600 max-w-3xl mx-auto text-lg">
                        Official publications of MSU Tawi-Tawi College of Technology and Oceanography
                    </p>
                </div>
            </div>
        </div>

        <!-- Latest Publication Section -->
        <div class="py-16 bg-gray-50 border-t border-b border-gray-100">
            <div class="container mx-auto px-4 xl:px-0">
                <div class="flex flex-col lg:flex-row gap-12 items-center">
                    <!-- Publication Cover -->
                    <div class="lg:w-1/2">
                        <div class="relative group overflow-hidden rounded-xl shadow-xl">
                            <img
                                src={urlForImage(latestGazette.mainImage.asset.url).url()}
                                class="w-full h-auto object-cover transform transition-all duration-500 group-hover:scale-105"
                                alt={latestGazette.title}
                            />
                            <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-8">
                                <h3 class="text-2xl font-bold text-white">{latestGazette.title}</h3>
                            </div>
                            <div class="absolute top-4 right-4 bg-msu-main-color text-white font-bold px-3 py-1 rounded-full text-sm">
                                Latest Issue
                            </div>
                        </div>
                    </div>

                    <!-- Publication Details -->
                    <div class="lg:w-1/2">
                        <div class="bg-white p-8 rounded-xl shadow-lg border border-gray-100">
                            <h2 class="headings text-3xl font-bold text-msu-dark-blue mb-4">{latestGazette.title}</h2>
                            <div class="flex items-center gap-4 mb-6">
                                <span class="bg-msu-blue/10 text-msu-blue px-3 py-1 rounded-full text-sm font-medium">
                                    {getYear(latestGazette.publishedAt)}
                                </span>
                                <span class="bg-msu-gold/10 text-msu-dark-blue px-3 py-1 rounded-full text-sm font-medium">
                                    {latestGazette.gazetteQuarter.gazetteQuarter}
                                </span>
                            </div>
                            <p class="paragraph p2 text-gray-600 mb-8 leading-relaxed">
                                {latestGazette.body[0].children[0].text}
                            </p>
                            <div class="flex flex-wrap gap-4">
                                <a
                                    href={latestGazette.file.asset.url} 
                                    target="_blank" 
                                    rel="noopener noreferrer"
                                    download
                                    class="inline-flex items-center justify-center bg-msu-main-color hover:bg-msu-deep-ocean text-white font-bold py-3 px-6 rounded-lg shadow-md transform transition-all duration-300 hover:scale-[1.02]"
                                >
                                    <svg class="w-5 h-5 gap-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                                    </svg>
                                    Download PDF
                                </a>
                                <!-- <a
                                    href={latestGazette.file.asset.url}
                                    class="inline-flex items-center justify-center bg-white border border-msu-blue text-msu-blue hover:bg-msu-blue/5 font-medium py-3 px-6 rounded-lg shadow-sm transform transition-all duration-300 hover:scale-[1.02]"
                                >
                                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                    </svg>
                                    Preview
                                </a> -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Publication Archive Section -->
        <div class="py-16 bg-white">
            <div class="container mx-auto px-4 xl:px-0">
                <!-- Search and Filter -->
                <div class="mb-16 max-w-6xl mx-auto">
                    <div class="flex flex-col md:flex-row gap-4">
                        <!-- Year Filter -->
                        <div class="relative flex-1">
                            <select id="yearFilter" class="filter-dropdown w-full">
                                <option value="All">All Years</option>
                                {
                                    uniqueYears.map(year => (
                                        <option value={year}>{year}</option>
                                    ))
                                }
                            </select>
                            <svg class="absolute right-3 top-3 w-5 h-5 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>

                        <!-- Quarter Filter -->
                        <div class="relative flex-1">
                            <select id="quarterFilter" class="filter-dropdown w-full">
                                {
                                    uniqueQuarters.map(gazetteQuarter => (
                                        <option value={gazetteQuarter}>{gazetteQuarter}</option>
                                    ))
                                }
                            </select>
                            <svg class="absolute right-3 top-3 w-5 h-5 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                            </svg>
                        </div>

                        <!-- Search Input -->
                        <div class="relative flex-1">
                            <input 
                                type="text" 
                                id="searchFilter" 
                                class="filter-dropdown w-full pl-10" 
                                placeholder="Search Gazette..." 
                            />
                            <svg class="absolute left-3 top-3 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                    </div>
                </div>

                <!-- Section Header -->
                <div class="text-center mb-12">
                    <h2 class="headings text-4xl font-bold text-msu-main-color mb-4">Gazette Archive</h2>
                    <div class="w-24 h-1.5 bg-msu-deep-ocean mx-auto"></div>
                </div>

                <!-- Publications Grid -->
                <div id="gazetteGrid" class="grid xl:grid-cols-3 lg:grid-cols-2 md:grid-cols-1 gap-8 mb-16">
                    {allGazette.map((gazette) => (
                        <div 
                            class="gazette-item bg-white rounded-xl shadow-md overflow-hidden border border-gray-100 hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1"
                            data-year={getYear(gazette.publishedAt)}
                            data-quarter={gazette.gazetteQuarter.gazetteQuarter}
                            data-title={gazette.title}
                            data-content={gazette.body[0].children[0].text}
                        >
                            <div class="relative group h-100 overflow-hidden">
                                <img 
                                    src={gazette.mainImage.asset.url} 
                                    class="w-full h-full object-cover transform transition-all duration-500 group-hover:scale-110"
                                    alt={gazette.title}
                                />
                                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-4">
                                    <a 
                                        href={gazette.file.asset.url} 
                                        target="_blank" 
                                        rel="noopener noreferrer"
                                        class="inline-flex items-center justify-center bg-msu-main-color hover:bg-msu-deep-ocean text-white font-medium py-2 px-4 rounded-lg transition-colors duration-300"
                                    >
                                        Download
                                    </a>
                                </div>
                            </div>
                            <div class="p-6">
                                <h3 class="headings text-xl font-bold text-msu-dark-blue mb-2 line-clamp-2">{gazette.title}</h3>
                                <p class="paragraph p2 text-gray-600 mb-4 line-clamp-3">{gazette.body[0].children[0].text}</p>
                                <div class="flex justify-between items-center">
                                    <div class="flex items-center gap-2">
                                        <span class="text-sm font-medium text-msu-blue">{getYear(gazette.publishedAt)}</span>
                                        <span class="text-xs bg-msu-blue/10 text-msu-blue px-2 py-1 rounded-full">
                                            {gazette.gazetteQuarter.gazetteQuarter}
                                        </span>
                                    </div>
                                    <a 
                                        href={gazette.file.asset.url} 
                                        target="_blank" 
                                        rel="noopener noreferrer"
                                        class="text-sm font-medium text-msu-blue hover:text-msu-dark-blue transition-colors flex items-center"
                                    >
                                        View <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>
                                    </a>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>

                <!-- Pagination -->
                <div class="flex justify-center">
                    <div id="pagination" class="flex items-center space-x-2">
                        <button id="prevPage" class="w-10 h-10 flex items-center justify-center bg-white border border-gray-200 rounded-full hover:bg-msu-blue/10 hover:border-msu-blue/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                            <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                            </svg>
                        </button>

                        <div id="pageNumbers" class="flex items-center space-x-2">
                            <!-- Page numbers will be dynamically inserted here -->
                        </div>

                        <button id="nextPage" class="w-10 h-10 flex items-center justify-center bg-white border border-gray-200 rounded-full hover:bg-msu-blue/10 hover:border-msu-blue/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed">
                            <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </div>

            <!-- Scroll to Top Button -->
    <button class="scroll-to-top" aria-label="Scroll to top">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
      </svg>
    </button>

        
     
        <FooterNav />
        <Footer />

        <script src="../../js/animate.js" ></script>
<script src="../../js/loadinganim.js" ></script>
<script src="../../js/smoothscroll.js" ></script>


        <!-- Search and Pagination Functionality -->
        <script client:load>
            document.addEventListener('DOMContentLoaded', () => {
                const itemsPerPage = 6;
                const gazetteGrid = document.getElementById('gazetteGrid');
                const allGazetteItems = Array.from(gazetteGrid.querySelectorAll('.gazette-item'));
                const yearFilter = document.getElementById('yearFilter');
                const quarterFilter = document.getElementById('quarterFilter');
                const searchFilter = document.getElementById('searchFilter');
                const prevPageButton = document.getElementById('prevPage');
                const nextPageButton = document.getElementById('nextPage');
                const pageNumbersContainer = document.getElementById('pageNumbers');

                let currentPage = 1;
                let filteredItems = allGazetteItems;

                function filterItems() {
                    const selectedYear = yearFilter.value.toLowerCase();
                    const selectedQuarter = quarterFilter.value.toLowerCase();
                    const searchQuery = searchFilter.value.toLowerCase();

                    filteredItems = allGazetteItems.filter(item => {
                        const year = item.getAttribute('data-year').toLowerCase();
                        const quarter = item.getAttribute('data-quarter').toLowerCase();
                        const title = item.getAttribute('data-title').toLowerCase();
                        const content = item.getAttribute('data-content').toLowerCase();

                        const yearMatch = selectedYear === 'all' || year === selectedYear;
                        const quarterMatch = selectedQuarter === 'all' || quarter === selectedQuarter;
                        const searchMatch = title.includes(searchQuery) || content.includes(searchQuery);

                        return yearMatch && quarterMatch && searchMatch;
                    });

                    currentPage = 1;
                    renderPagination();
                    changePage(currentPage);
                }

                function renderPagination() {
                    const totalPages = Math.ceil(filteredItems.length / itemsPerPage);
                    pageNumbersContainer.innerHTML = '';

                    // Always show first page
                    if (totalPages > 0) {
                        const firstPageButton = createPageButton(1);
                        pageNumbersContainer.appendChild(firstPageButton);
                    }

                    // Show current page and neighbors
                    const startPage = Math.max(2, currentPage - 1);
                    const endPage = Math.min(totalPages - 1, currentPage + 1);

                    // Add ellipsis if needed
                    if (startPage > 2) {
                        const ellipsis = document.createElement('span');
                        ellipsis.className = 'px-2 text-gray-500';
                        ellipsis.textContent = '...';
                        pageNumbersContainer.appendChild(ellipsis);
                    }

                    // Add middle pages
                    for (let i = startPage; i <= endPage; i++) {
                        const pageButton = createPageButton(i);
                        pageNumbersContainer.appendChild(pageButton);
                    }

                    // Add ellipsis if needed
                    if (endPage < totalPages - 1) {
                        const ellipsis = document.createElement('span');
                        ellipsis.className = 'px-2 text-gray-500';
                        ellipsis.textContent = '...';
                        pageNumbersContainer.appendChild(ellipsis);
                    }

                    // Always show last page if different from first
                    if (totalPages > 1) {
                        const lastPageButton = createPageButton(totalPages);
                        pageNumbersContainer.appendChild(lastPageButton);
                    }

                    prevPageButton.disabled = currentPage === 1;
                    nextPageButton.disabled = currentPage === totalPages || totalPages === 0;
                }

                function createPageButton(pageNumber) {
                    const pageButton = document.createElement('button');
                    pageButton.className = `w-10 h-10 flex items-center justify-center rounded-full transition-all ${
                        currentPage === pageNumber ? 'bg-msu-blue text-white font-medium' : 'bg-white text-gray-600 hover:bg-gray-100'
                    }`;
                    pageButton.textContent = pageNumber;
                    pageButton.addEventListener('click', () => changePage(pageNumber));
                    return pageButton;
                }

                function changePage(page) {
                    currentPage = page;
                    const startIndex = (currentPage - 1) * itemsPerPage;
                    const endIndex = startIndex + itemsPerPage;

                    allGazetteItems.forEach((item) => {
                        item.style.display = 'none';
                    });

                    filteredItems.slice(startIndex, endIndex).forEach((item) => {
                        item.style.display = 'block';
                    });

                    renderPagination();
                }

                // Event listeners
                yearFilter.addEventListener('change', filterItems);
                quarterFilter.addEventListener('change', filterItems);
                searchFilter.addEventListener('input', filterItems);

                prevPageButton.addEventListener('click', () => {
                    if (currentPage > 1) changePage(currentPage - 1);
                });

                nextPageButton.addEventListener('click', () => {
                    if (currentPage < Math.ceil(filteredItems.length / itemsPerPage)) changePage(currentPage + 1);
                });

                // Initial render
                filterItems();
                renderPagination();
            });
        </script>

        <style global>
            :root {
                --msu-dark-blue: #003366;
                --msu-blue: #61063B;
                --msu-light-blue: #E6F2FF;
                --msu-gold: #FFCC00;
                --msu-dark-gold: #E6B800;
            }
            
            .bg-msu-dark-blue {
                background-color: var(--msu-dark-blue);
            }
            
            .bg-msu-blue {
                background-color: var(--msu-blue);
            }
            
            .bg-msu-light-blue {
                background-color: var(--msu-light-blue);
            }
            
            .bg-msu-gold {
                background-color: var(--msu-gold);
            }
            
            .bg-msu-dark-gold {
                background-color: var(--msu-dark-gold);
            }
            
            .text-msu-dark-blue {
                color: var(--msu-dark-blue);
            }
            
            .text-msu-blue {
                color: var(--msu-blue);
            }
            
            .text-msu-gold {
                color: var(--msu-gold);
            }
            
            .border-msu-blue {
                border-color: var(--msu-blue);
            }
            
            .hover\:bg-msu-dark-gold:hover {
                background-color: var(--msu-dark-gold);
            }
            
            .hover\:text-msu-dark-blue:hover {
                color: var(--msu-dark-blue);
            }
            
            .line-clamp-2 {
                display: -webkit-box;
                -webkit-line-clamp: 2;
                -webkit-box-orient: vertical;
                overflow: hidden;
            }
            
            .line-clamp-3 {
                display: -webkit-box;
                -webkit-line-clamp: 3;
                -webkit-box-orient: vertical;
                overflow: hidden;
            }
            
            .filter-dropdown {
                @apply w-full p-3 pl-10 border border-gray-200 rounded-lg shadow-sm focus:ring-2 focus:ring-msu-gold focus:border-msu-gold outline-none transition-all duration-300;
            }
            
            .shadow-md {
                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            }
        </style>
    </main>
</Layout>