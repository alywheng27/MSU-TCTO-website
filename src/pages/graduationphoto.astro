---
import Layout from '../layouts/introloader.astro';
import Navbar from "../components/Navbar";
import Footer from "../components/Footer.astro";
import '../styles/css/global.css';
import '../styles/css/globalanimate.css';

const currentPath = Astro.url.pathname;
---

<Layout title="MSU-TCTO | Find Your Graduation Photos">
    
    <style>
        /* Professional calendar modal design */
        #calendarPicker {
            position: fixed !important;
            top: 0 !important;
            left: 0 !important;
            right: 0 !important;
            bottom: 0 !important;
            width: 100vw !important;
            height: 100vh !important;
            z-index: 9999999 !important;
            background-color: rgba(0,0,0,0.2) !important;
            backdrop-filter: blur(2px) !important;
            pointer-events: auto !important;
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
        }
        
        #calendarPicker > div:not(.absolute) {
            position: relative !important;
            top: auto !important;
            left: auto !important;
            transform: none !important;
            margin: 0 !important;
            z-index: 10000000 !important;
            background: white !important;
            border-radius: 12px !important;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15) !important;
            padding: 24px !important;
            width: 95vw !important;
            max-width: 400px !important;
            max-height: 75vh !important;
            overflow-y: auto !important;
            pointer-events: auto !important;
            border: 1px solid #e5e7eb !important;
        }
        
        /* Ensure calendar is visible on all devices */
        @media (max-width: 768px) {
            #calendarPicker > div:not(.absolute) {
                width: calc(100vw - 24px) !important;
                max-width: 360px !important;
                padding: 20px !important;
            }
        }
        
        @media (min-width: 769px) {
            #calendarPicker > div:not(.absolute) {
                width: 95vw !important;
                max-width: 420px !important;
                padding: 28px !important;
            }
        }
        
        /* Professional animation */
        #calendarPicker {
            animation: professionalFadeIn 0.25s ease-out !important;
        }
        
        @keyframes professionalFadeIn {
            from {
                opacity: 0;
                transform: scale(0.98);
            }
            to {
                opacity: 1;
                transform: scale(1);
            }
        }
        
        /* Prevent any element from overlapping the calendar */
        #calendarPicker {
            z-index: 9999999 !important;
        }
        
        #calendarPicker > div:not(.absolute) {
            z-index: 10000000 !important;
        }
        
        /* Ensure form elements don't interfere */
        #photoSearchForm {
            z-index: 1 !important;
        }
        
        #searchButton {
            z-index: 1 !important;
        }
        
        /* Ensure footer doesn't interfere with calendar */
        footer {
            z-index: 50 !important;
        }
        
        /* Hide search button when calendar is open */
        #calendarPicker:not([style*="display: none"]) ~ #searchButton,
        #calendarPicker[style*="display: flex"] ~ #searchButton {
            display: none !important;
            visibility: hidden !important;
            opacity: 0 !important;
        }
        
        /* Ensure search button is visible when calendar is closed */
        #searchButton {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            z-index: 1 !important;
            pointer-events: auto !important;
        }
        
        /* Override any calendar-related hiding when calendar is not visible */
        #calendarPicker[style*="display: none"] ~ #searchButton,
        #calendarPicker[style*="visibility: hidden"] ~ #searchButton {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            pointer-events: auto !important;
        }
        
        /* Calendar priority over everything */
        #calendarPicker {
            z-index: 9999999 !important;
            position: fixed !important;
        }
    </style>
    
    <main class="font-sans antialiased text-gray-800 leading-normal overflow-x-hidden">
        <!-- Navbar -->
        <Navbar path={currentPath} client:visible />

        <!-- Hero Section with Graduation Theme -->
        <section class="relative bg-msu-main-color min-h-screen flex items-center overflow-hidden pt-16 sm:pt-20 md:pt-24 lg:pt-[80px] pb-20">
            <!-- Background Image -->
            <div class="absolute inset-0 z-0 overflow-hidden">
                <img src="/images/commencement/Background.png" alt="Graduation Ceremony" class="w-full h-full object-cover" />
                <div class="absolute inset-0 bg-black/50"></div>
            </div>
       
         
            </div>
            <!-- Gradient overlay -->
            <div class="absolute inset-0 bg-gradient-to-t from-msu-deep-ocean/90 via-msu-main-color/50 to-transparent z-1"></div>
            
            <!-- Content -->
            <div class="container mx-auto px-4 sm:px-6 lg:px-8 z-10 relative">
                <div class="max-w-4xl mx-auto text-center px-2 sm:px-4">
                    <!-- University Seal -->
                    <div class="mb-4 sm:mb-6 md:mb-8 animate-fadeIn">
                        <img 
                            src="/images/commencement/53rd text.png" 
                            alt="MSU Official Seal" 
                            class="h-16 sm:h-20 md:h-24 lg:h-32 mx-auto transition-all duration-500 hover:scale-105"
                            loading="lazy"
                        >
                    </div>
                    
                    <!-- Guest Speakers -->
                    <div class="mt-4 sm:mt-6 md:mt-8 mb-8 sm:mb-10 md:mb-12 animate-fadeInUp">
                        <h2 class="text-xl sm:text-2xl md:text-3xl lg:text-4xl font-bold text-white mb-4 sm:mb-6 px-2">Distinguished Guest Speakers</h2>
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-4 md:gap-6 px-2">
                            <!-- Guest Speaker 1 -->
                            <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-3 sm:p-4 transition-all duration-300 hover:bg-white/20 cursor-pointer touch-manipulation" onclick="openModal('/images/commencement/assoc.jpg', 'Assoc. Prof. Aljemedin Jaudinez')">
                                <div class="aspect-square rounded-lg overflow-hidden mb-3 sm:mb-4">
                                    <img 
                                        src="/images/commencement/assoc.jpg" 
                                        alt="Guest Speaker" 
                                        class="w-full h-full object-cover"
                                        loading="lazy"
                                    >
                                </div>
                                <h3 class="text-white font-bold text-sm sm:text-base md:text-lg leading-tight">Assoc. Prof. Aljemedin Jaudinez</h3>
                                <p class="text-white/90 text-xs sm:text-sm leading-tight">Faculty, College of Education, MSU-TCTO</p>
                                <p class="text-white/80 text-xs mt-1">Guest Speaker</p>
                            </div>

                            <!-- Guest Speaker 2 -->
                            <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-3 sm:p-4 transition-all duration-300 hover:bg-white/20 cursor-pointer touch-manipulation" onclick="openModal('/images/commencement/atty.jpg', 'Atty. Mohammad Jamalul J. Giducos, LL.M.')">
                                <div class="aspect-square rounded-lg overflow-hidden mb-3 sm:mb-4">
                                    <img 
                                        src="/images/commencement/atty.jpg" 
                                        alt="Guest Speaker" 
                                        class="w-full h-full object-cover"
                                        loading="lazy"
                                    >
                                </div>
                                <h3 class="text-white font-bold text-sm sm:text-base md:text-lg leading-tight">Atty. Mohammad Jamalul J. Giducos, LL.M.</h3>
                                <p class="text-white/90 text-xs sm:text-sm leading-tight">Director of Legal and Amnesty Operations, National Amnesty Commission</p>
                                <p class="text-white/80 text-xs mt-1">Pre Commencement Speaker</p>
                            </div>

                            <!-- Guest Speaker 3 -->
                            <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-3 sm:p-4 transition-all duration-300 hover:bg-white/20 cursor-pointer touch-manipulation" onclick="openModal('/images/commencement/engr.jpg', 'Engr. Firash Zhed S. Ututalum, MS')">
                                <div class="aspect-square rounded-lg overflow-hidden mb-3 sm:mb-4">
                                    <img 
                                        src="/images/commencement/engr.jpg" 
                                        alt="Guest Speaker" 
                                        class="w-full h-full object-cover"
                                        loading="lazy"
                                    >
                                </div>
                                <h3 class="text-white font-bold text-sm sm:text-base md:text-lg leading-tight">Engr. Firash Zhed S. Ututalum, MS</h3>
                                <p class="text-white/90 text-xs sm:text-sm leading-tight">Dean of Student Affairs, Sulu State College</p>
                                <p class="text-white/80 text-xs mt-1">Pre Commencement Speaker</p>
                            </div>

                            <!-- Guest Speaker 4 -->
                            <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-3 sm:p-4 transition-all duration-300 hover:bg-white/20 cursor-pointer touch-manipulation" onclick="openModal('/images/commencement/director.jpg', 'Dr. Jayeel S. Cornelio')">
                                <div class="aspect-square rounded-lg overflow-hidden mb-3 sm:mb-4">
                                    <img 
                                        src="/images/commencement/director.jpg" 
                                        alt="Guest Speaker" 
                                        class="w-full h-full object-cover"
                                        loading="lazy"
                                    >
                                </div>
                                <h3 class="text-white font-bold text-sm sm:text-base md:text-lg leading-tight">Dr. Jayeel S. Cornelio</h3>
                                <p class="text-white/90 text-xs sm:text-sm leading-tight">Director, DOST Science Education Institute</p>
                                <p class="text-white/80 text-xs mt-1">Commencement Speaker</p>
                            </div>
                        </div>
                    </div>

                    <!-- Modal for enlarged image -->
                    <div id="imageModal" class="fixed inset-0 bg-black bg-opacity-75 z-50 hidden flex items-center justify-center p-4">
                        <div class="relative max-w-4xl w-full mx-auto">
                            <button onclick="closeModal()" class="absolute top-2 right-2 sm:top-4 sm:right-4 text-white hover:text-gray-300 focus:outline-none z-10">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-8 sm:w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                </svg>
                            </button>
                            <img id="modalImage" src="" alt="" class="w-full h-auto max-h-[80vh] rounded-lg animate-scaleIn object-contain" loading="lazy">
                            <p id="modalCaption" class="text-white text-center mt-2 sm:mt-4 text-sm sm:text-base md:text-xl px-4"></p>
                        </div>
                    </div>

                    <script>
                        function openModal(imageSrc, caption) {
                            const modal = document.getElementById('imageModal');
                            const modalImg = document.getElementById('modalImage') as HTMLImageElement;
                            const modalCaption = document.getElementById('modalCaption');
                            
                            if (modalImg && modalCaption) {
                                modalImg.src = imageSrc;
                                modalImg.alt = caption;
                                modalCaption.textContent = caption;
                                modal?.classList.remove('hidden');
                                document.body.style.overflow = 'hidden';
                                
                                // Prevent body scroll on mobile
                                if (window.innerWidth <= 768) {
                                    document.body.style.position = 'fixed';
                                    document.body.style.width = '100%';
                                }
                            }
                        }

                        function closeModal() {
                            const modal = document.getElementById('imageModal');
                            modal?.classList.add('hidden');
                            document.body.style.overflow = 'auto';
                            
                            // Restore body scroll on mobile
                            if (window.innerWidth <= 768) {
                                document.body.style.position = '';
                                document.body.style.width = '';
                            }
                        }

                        // Close modal when clicking outside the image
                        document.getElementById('imageModal')?.addEventListener('click', function(e) {
                            if (e.target === this) {
                                closeModal();
                            }
                        });

                        // Close modal with escape key
                        document.addEventListener('keydown', function(e) {
                            if (e.key === 'Escape') {
                                closeModal();
                            }
                        });

                        // Handle window resize for modal
                        window.addEventListener('resize', function() {
                            const modal = document.getElementById('imageModal');
                            if (modal && !modal.classList.contains('hidden')) {
                                if (window.innerWidth <= 768) {
                                    document.body.style.position = 'fixed';
                                    document.body.style.width = '100%';
                                } else {
                                    document.body.style.position = '';
                                    document.body.style.width = '';
                                }
                            }
                        });
                    </script>

                    <!-- Call-to-Action Buttons -->
                    <div class="flex flex-col sm:flex-row justify-center gap-3 sm:gap-4 mt-6 sm:mt-8 animate-fadeInUp delay-200 px-4">
                        <a 
                            href="#photos" 
                            class="bg-msu-main-color hover:bg-msu-deep-ocean text-white font-medium py-2 sm:py-3 px-4 sm:px-6 rounded-full transition-all duration-300 inline-flex items-center justify-center hover:shadow-lg text-sm sm:text-base"
                        >
                                  Graduation Photos
                        </a>
                        <a 
                            href="#progressphoto"
                            class="relative bg-gradient-to-r from-msu-gold/20 via-msu-deep-ocean/30 to-msu-gold/20 hover:from-msu-gold/30 hover:via-msu-deep-ocean/40 hover:to-msu-gold/30 border border-white/30 text-white font-medium py-2 sm:py-3 px-4 sm:px-6 rounded-full transition-all duration-500 inline-flex items-center justify-center hover:shadow-lg text-sm sm:text-base group overflow-hidden"
                        >
                            <span class="absolute inset-0 bg-gradient-to-r from-white/10 via-white/20 to-white/10 transform -translate-x-full group-hover:translate-x-full transition-transform duration-1000 blur-sm"></span>
                            <span class="absolute inset-0 bg-gradient-to-r from-msu-gold/10 via-msu-deep-ocean/20 to-msu-gold/10 opacity-0 group-hover:opacity-100 transition-opacity duration-700"></span>
                            <span class="relative flex items-center gap-2">
                                <span class="w-2 h-2 rounded-full bg-gradient-to-r from-msu-gold via-white to-msu-gold animate-pulse"></span>
                                <span class="relative inline-flex items-center">
                                    <span class="absolute -left-1 w-0 h-full bg-gradient-to-r from-msu-gold/30 via-white/40 to-msu-gold/30 group-hover:w-[calc(100%+0.5rem)] transition-all duration-700"></span>
                                    <span class="relative bg-gradient-to-r from-white via-msu-gold to-white bg-clip-text text-transparent group-hover:text-white transition-colors duration-500">Photo Upload Progress</span>
                                </span>
                            </span>
                        </a>
                        <!-- <a 
                            href="#mission" 
                            class="bg-gradient-to-r from-msu-gold via-msu-deep-ocean to-msu-gold text-white font-medium py-2 sm:py-3 px-4 sm:px-6 rounded-full transition-all duration-300 inline-flex items-center justify-center hover:shadow-xl hover:scale-105 group relative overflow-hidden"
                        >
                            <span class="absolute inset-0 bg-gradient-to-r from-msu-gold/20 via-transparent to-msu-gold/20 transform -skew-x-12 group-hover:animate-shimmer"></span>
                            <span class="relative flex items-center">
                                <span class="mr-2 transform group-hover:rotate-12 transition-transform duration-300">🎯</span>
                                <span class="group-hover:text-msu-gold transition-colors duration-300">Mission Accomplished</span>
                            </span>
                        </a> -->
                    </div>
                </div>
            </div>
         
            <!-- Scrolling Indicator -->
            <div class="absolute bottom-4 sm:bottom-6 md:bottom-8 lg:bottom-10 left-1/2 transform -translate-x-1/2 z-20">
                <a href="#invitation" class="block p-2 focus:outline-none animate-bounce">
                    <svg class="w-8 h-8 sm:w-7 sm:h-7 md:w-6 md:h-6 lg:w-5 lg:h-5 text-white/90 hover:text-white transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
                    </svg>
                </a>
            </div>
        </section>

        <!-- Digital Invitation Section -->
        <!-- <section id="invitation" class="py-12 sm:py-16 md:py-20 bg-gradient-to-b from-white to-gray-50">
            <div class="container mx-auto px-4 sm:px-6">
                <div class="text-center mb-8 sm:mb-12 md:mb-16">
                    <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold text-msu-deep-ocean mb-3 sm:mb-4">Commencement Invitation</h2>
                    <div class="w-16 sm:w-20 h-1 bg-msu-gold mx-auto"></div>
                </div>
                
       
                <div class="max-w-4xl mx-auto bg-white rounded-lg sm:rounded-xl shadow-2xl overflow-hidden border border-gray-100 transform hover:scale-[1.01] transition-transform duration-300">
                    <div class="flex flex-col md:flex-row">
                  
                        <div class="md:w-1/2 bg-msu-deep-ocean flex items-center justify-center p-6 sm:p-8">
                            <img src="/images/commencement/53rd text.png" alt="MSU-TCTO Seal" class="w-48 h-48 sm:w-56 sm:h-56 md:w-64 md:h-64 object-contain opacity-90">
                        </div>
                        
                  
                        <div class="md:w-1/2 p-6 sm:p-8 md:p-12">
                            <div class="text-center">
                                <h3 class="text-xl sm:text-2xl font-bold text-msu-deep-ocean mb-2">You Are Cordially Invited</h3>
                                <p class="text-gray-600 mb-4 sm:mb-6">to the</p>
                                
                                <h4 class="text-2xl sm:text-3xl font-bold text-msu-deep-ocean mb-3 sm:mb-4">{new Date().getFullYear()} Commencement Exercises</h4>
                                
                                <div class="space-y-3 sm:space-y-4 text-gray-700 mb-6 sm:mb-8 text-sm sm:text-base">
                                    <p>Mindanao State University</p>
                                    <p>Tawi-Tawi College of Technology and Oceanography</p>
                                    <p class="font-semibold">{new Date(new Date().getFullYear(), 5, 15).toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' })}</p>
                                    <p>8:00 AM | University Gymnasium</p>
                                </div>
                                
                                <div class="border-t border-gray-200 pt-4 sm:pt-6">
                                    <p class="text-xs sm:text-sm text-gray-500">Academic Attire Required</p>
                                    <p class="text-xs sm:text-sm text-gray-500">Reception to Follow</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> 
                
        
                <div class="text-center mt-6 sm:mt-8 md:mt-10">
                    <a href="/downloads/commencement-invitation.pdf" class="inline-flex items-center px-4 sm:px-6 py-2 sm:py-3 bg-msu-main-color text-white rounded-lg font-medium hover:bg-msu-deep-ocean transition-colors text-sm sm:text-base">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                        </svg>
                        Download Official Invitation
                    </a>
                </div>
            </div>
        </section>-->

        <!-- Ceremony Schedule -->
        <!-- <section id="schedule" class="py-12 sm:py-16 md:py-20 bg-gray-50">
            <div class="container mx-auto px-4 sm:px-6">
                <div class="text-center mb-8 sm:mb-12 md:mb-16">
                    <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold text-msu-main-color mb-3 sm:mb-4">Ceremony Schedule</h2>
                    <div class="w-16 sm:w-20 h-1 bg-msu-gold mx-auto"></div>
                </div>
                
     
                <div class="max-w-3xl mx-auto">
                    <div class="space-y-6 sm:space-y-8">
                 
                        <div class="flex items-start">
                            <div class="flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-msu-main-color text-white flex items-center justify-center mr-3 sm:mr-4 mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
                                </svg>
                            </div>
                            <div class="flex-1 bg-white p-4 sm:p-6 rounded-lg shadow-md border-l-4 border-msu-main-color">
                                <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2">7:00 AM - Processional</h3>
                                <p class="text-gray-600 text-sm sm:text-base">Faculty, administrators, and graduating students assemble at the academic quadrangle for the academic procession.</p>
                            </div>
                        </div>
                        
                
                        <div class="flex items-start">
                            <div class="flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-msu-main-color text-white flex items-center justify-center mr-3 sm:mr-4 mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                                </svg>
                            </div>
                            <div class="flex-1 bg-white p-4 sm:p-6 rounded-lg shadow-md border-l-4 border-msu-main-color">
                                <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2">8:00 AM - Opening Ceremonies</h3>
                                <ul class="list-disc pl-4 sm:pl-5 space-y-1 sm:space-y-2 text-gray-600 text-sm sm:text-base">
                                    <li>National Anthem</li>
                                    <li>University Hymn</li>
                                    <li>Invocation</li>
                                    <li>Welcome Remarks</li>
                                </ul>
                            </div>
                        </div>
                        
                 
                        <div class="flex items-start">
                            <div class="flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-msu-main-color text-white flex items-center justify-center mr-3 sm:mr-4 mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path d="M12 14l9-5-9-5-9 5 9 5z" />
                                    <path d="M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222" />
                                </svg>
                            </div>
                            <div class="flex-1 bg-white p-4 sm:p-6 rounded-lg shadow-md border-l-4 border-msu-main-color">
                                <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2">9:00 AM - Conferment of Degrees</h3>
                                <ul class="list-disc pl-4 sm:pl-5 space-y-1 sm:space-y-2 text-gray-600 text-sm sm:text-base">
                                    <li>Presentation of Candidates</li>
                                    <li>Conferment of Degrees by the Chancellor</li>
                                    <li>Awarding of Diplomas</li>
                                    <li>Recognition of Honors and Awards</li>
                                </ul>
                            </div>
                        </div>
                        
                
                        <div class="flex items-start">
                            <div class="flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-msu-main-color text-white flex items-center justify-center mr-3 sm:mr-4 mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                            </div>
                            <div class="flex-1 bg-white p-4 sm:p-6 rounded-lg shadow-md border-l-4 border-msu-main-color">
                                <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2">10:30 AM - Keynote Address</h3>
                                <p class="text-gray-600 font-semibold mb-2 text-sm sm:text-base">Dr. Maria Cristina D. Padolina</p>
                                <p class="text-gray-600 text-sm sm:text-base">President Emeritus, MSU System</p>
                            </div>
                        </div>
                        
               
                        <div class="flex items-start">
                            <div class="flex-shrink-0 w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-msu-main-color text-white flex items-center justify-center mr-3 sm:mr-4 mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                            <div class="flex-1 bg-white p-4 sm:p-6 rounded-lg shadow-md border-l-4 border-msu-main-color">
                                <h3 class="text-lg sm:text-xl font-bold text-gray-900 mb-2">11:30 AM - Closing Ceremonies</h3>
                                <ul class="list-disc pl-4 sm:pl-5 space-y-1 sm:space-y-2 text-gray-600 text-sm sm:text-base">
                                    <li>Alumni Induction</li>
                                    <li>Closing Remarks</li>
                                    <li>Recessional</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section> -->

        <!-- Graduates Spotlight -->
        <!-- <section class="py-12 sm:py-16 md:py-20 bg-gradient-to-r from-msu-main-color to-msu-deep-ocean text-white">
            <div class="container mx-auto px-4 sm:px-6">
                <div class="text-center mb-8 sm:mb-12 md:mb-16">
                    <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold mb-3 sm:mb-4">Class of {new Date().getFullYear()}</h2>
                    <div class="w-16 sm:w-20 h-1 bg-msu-gold mx-auto"></div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 sm:gap-8 max-w-6xl mx-auto">
              
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-6 sm:p-8 text-center border border-white/20">
                        <div class="w-24 h-24 sm:w-28 sm:h-28 md:w-32 md:h-32 mx-auto mb-4 sm:mb-6 rounded-full overflow-hidden border-4 border-msu-gold">
                            <img src="/images/commencement/valedictorian.jpg" alt="Valedictorian" class="w-full h-full object-cover">
                        </div>
                        <h3 class="text-lg sm:text-xl md:text-2xl font-bold mb-2">Summa Cum Laude</h3>
                        <p class="text-base sm:text-lg md:text-xl mb-1">Sarah M. Hassan</p>
                        <p class="text-msu-gold font-medium text-sm sm:text-base">BS Fisheries</p>
                        <p class="text-xs sm:text-sm mt-3 sm:mt-4">GPA: 1.02</p>
                    </div>
               
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-6 sm:p-8 border border-white/20">
                        <h3 class="text-lg sm:text-xl md:text-2xl font-bold mb-4 sm:mb-6 text-center">By The Numbers</h3>
                        <div class="space-y-3 sm:space-y-4 text-sm sm:text-base">
                            <div class="flex justify-between items-center border-b border-white/20 pb-2">
                                <span>Total Graduates</span>
                                <span class="font-bold">428</span>
                            </div>
                            <div class="flex justify-between items-center border-b border-white/20 pb-2">
                                <span>With Honors</span>
                                <span class="font-bold">112</span>
                            </div>
                            <div class="flex justify-between items-center border-b border-white/20 pb-2">
                                <span>Degree Programs</span>
                                <span class="font-bold">6</span>
                            </div>
                            <div class="flex justify-between items-center border-b border-white/20 pb-2">
                                <span>International Students</span>
                                <span class="font-bold">18</span>
                            </div>
                            <div class="flex justify-between items-center border-b border-white/20 pb-2">
                                <span>First Generation</span>
                                <span class="font-bold">63%</span>
                            </div>
                        </div>
                    </div>
                    
         
                    <div class="bg-white/10 backdrop-blur-sm rounded-lg sm:rounded-xl p-6 sm:p-8 text-center border border-white/20">
                        <div class="w-24 h-24 sm:w-28 sm:h-28 md:w-32 md:h-32 mx-auto mb-4 sm:mb-6 rounded-full overflow-hidden border-4 border-msu-gold">
                            <img src="/images/commencement/salutatorian.jpg" alt="Salutatorian" class="w-full h-full object-cover">
                        </div>
                        <h3 class="text-lg sm:text-xl md:text-2xl font-bold mb-2">Magna Cum Laude</h3>
                        <p class="text-base sm:text-lg md:text-xl mb-1">Ahmad R. Abdullah</p>
                        <p class="text-msu-gold font-medium text-sm sm:text-base">BS Information Technology</p>
                        <p class="text-xs sm:text-sm mt-3 sm:mt-4">GPA: 1.15</p>
                    </div>
                </div>
                
                <div class="text-center mt-8 sm:mt-10 md:mt-12">
                    <a href="/commencement/graduates" class="inline-flex items-center px-4 sm:px-6 py-2 sm:py-3 bg-white text-msu-main-color rounded-lg font-medium hover:bg-gray-100 transition-colors text-sm sm:text-base">
                        View Complete Graduates List
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 sm:h-5 sm:w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                    </a>
                </div>
            </div>
        </section> -->
        <!-- Photo Upload Progress Section -->
        <section id="progressphoto" class="relative bg-white py-16 sm:py-20 md:py-24">
            <div class="container mx-auto px-4 sm:px-6">
                <div class="max-w-4xl mx-auto">
                    <div class="text-center mb-10 animate-fadeInUp">
                        <h2 class="text-3xl sm:text-4xl font-bold text-msu-deep-ocean mb-4">Photo Upload Progress</h2>
                        <p class="text-gray-600 text-sm sm:text-base">Track the status of graduation photo uploads for each college</p>
                    </div>

                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 animate-fadeInUp delay-100">
                        <!-- College of Arts and Science -->
                        <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105">
                            <h3 class="text-msu-deep-ocean font-bold text-lg mb-3">CAS</h3>
                            <div class="relative pt-1">
                                <div class="flex mb-2 items-center justify-between">
                                    <div>
                                        <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-gradient-to-r from-purple-500 to-pink-500 animate-pulse">
                                            Progress
                                        </span>
                                    </div>
                                    <div class="text-right">
                                        <span class="text-xs font-semibold inline-block text-msu-deep-ocean progress-percentage" data-target="25">
                                            0%
                                        </span>
                                    </div>
                                </div>
                                <div class="progress-container h-3 mb-4">
                                    <div class="progress-bar" data-percentage="100">
                                    </div>
                                </div>
                                <div class="flex justify-between text-xs text-gray-500">
                                    <!-- <span>0 photos</span> -->
                                    <!-- <span class="total-photos" data-target="0">189 photos</span> -->
                                </div>
                            </div>
                        </div>

                        <!-- College of Islamic & Arabic Studies -->
                        <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105">
                            <h3 class="text-msu-deep-ocean font-bold text-lg mb-3">CIAS</h3>
                            <div class="relative pt-1">
                                <div class="flex mb-2 items-center justify-between">
                                    <div>
                                        <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-gradient-to-r from-teal-500 to-cyan-500 animate-pulse">
                                            Completed
                                        </span>
                                    </div>
                                    <div class="text-right">
                                        <span class="text-xs font-semibold inline-block text-msu-deep-ocean progress-percentage" data-target="0">
                                            0%
                                        </span>
                                    </div>
                                </div>
                                <div class="progress-container h-3 mb-4">
                                    <div class="progress-bar" data-percentage="100">
                                    </div>
                                </div>
                                <div class="flex justify-between text-xs text-gray-500">
                                    <!-- <span>0 photos</span> -->
                                    <!-- <span class="total-photos" data-target="0">156 photos</span> -->
                                </div>
                            </div>
                        </div>

                        <!-- College of Fisheries -->
                        <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105">
                            <h3 class="text-msu-deep-ocean font-bold text-lg mb-3">COF</h3>
                            <div class="relative pt-1">
                                <div class="flex mb-2 items-center justify-between">
                                    <div>
                                        <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-gradient-to-r from-blue-500 to-msu-main-color animate-pulse">
                                            Progress
                                        </span>
                                    </div>
                                    <div class="text-right">
                                        <span class="text-xs font-semibold inline-block text-msu-deep-ocean progress-percentage" data-target="0">
                                            0%
                                        </span>
                                    </div>
                                </div>
                                <div class="progress-container h-3 mb-4">
                                    <div class="progress-bar" data-percentage="100">
                                    </div>
                                </div>
                                <div class="flex justify-between text-xs text-gray-500">
                                    <!-- <span>0 photos</span> -->
                                    <!-- <span class="total-photos" data-target="0">342 photos</span> -->
                                </div>
                            </div>
                        </div>

                        <!-- College of Education -->
                        <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105">
                            <h3 class="text-msu-deep-ocean font-bold text-lg mb-3">COED</h3>
                            <div class="relative pt-1">
                                <div class="flex mb-2 items-center justify-between">
                                    <div>
                                        <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-gradient-to-r from-pink-500 to-blue-600 animate-pulse">
                                            Progress
                                        </span>
                                    </div>
                                    <div class="text-right">
                                        <span class="text-xs font-semibold inline-block text-msu-deep-ocean progress-percentage" data-target="0">
                                            0%
                                        </span>
                                    </div>
                                </div>
                                <div class="progress-container h-3 mb-4">
                                    <div class="progress-bar" data-percentage="100">
                                    </div>
                                </div>
                                <div class="flex justify-between text-xs text-gray-500">
                                    <!-- <span>0 photos</span> -->
                                    <!-- <span class="total-photos" data-target="0">256 photos</span> -->
                                </div>
                            </div>
                        </div>

                        <!-- Institute of Information and Communication Technology -->
                        <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105">
                            <h3 class="text-msu-deep-ocean font-bold text-lg mb-3">IICT</h3>
                            <div class="relative pt-1">
                                <div class="flex mb-2 items-center justify-between">
                                    <div>
                                        <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-gradient-to-r from-indigo-500 to-purple-600 animate-pulse">
                                            Completed
                                        </span>
                                    </div>
                                    <div class="text-right">
                                        <span class="text-xs font-semibold inline-block text-msu-deep-ocean progress-percentage" data-target="0">
                                            0%
                                        </span>
                                    </div>
                                </div>
                                <div class="progress-container h-3 mb-4">
                                    <div class="progress-bar" data-percentage="100">
                                    </div>
                                </div>
                                <div class="flex justify-between text-xs text-gray-500">
                                    <!-- <span>0 photos</span> -->
                                    <!-- <span class="total-photos" data-target="0">203 photos</span> -->
                                </div>
                            </div>
                        </div>

                        <!-- Institute of Oceanography and Environmental Science -->
                        <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-lg hover:shadow-xl transition-all duration-500 hover:scale-105">
                            <h3 class="text-msu-deep-ocean font-bold text-lg mb-3">IOES</h3>
                            <div class="relative pt-1">
                                <div class="flex mb-2 items-center justify-between">
                                    <div>
                                        <span class="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-white bg-gradient-to-r from-cyan-500 to-blue-600 animate-pulse">
                                            Completed
                                        </span>
                                    </div>
                                    <div class="text-right">
                                        <span class="text-xs font-semibold inline-block text-msu-deep-ocean progress-percentage" data-target="0">
                                            0%
                                        </span>
                                    </div>
                                </div>
                                <div class="progress-container h-3 mb-4">
                                    <div class="progress-bar" data-percentage="100">
                                    </div>
                                </div>
                                <div class="flex justify-between text-xs text-gray-500">
                                    <!-- <span>0 photos</span> -->
                                    <!-- <span class="total-photos" data-target="178">178 photos</span> -->
                                </div>
                            </div>
                        </div>

                       


                    </div>

                    <div class="text-center mt-8 animate-fadeInUp delay-200">
                        <!-- <p class="text-gray-600 text-sm">Last updated: <span id="lastUpdated">{new Date().toLocaleDateString()}</span></p>
                        <p class="text-gray-500 text-xs mt-2">Photos are being processed and uploaded continuously. Check back regularly for updates.</p> -->
                    </div>
                </div>
            </div>
        </section>

        <style>
            @keyframes shimmer {
                0% { background-position: -200% 0; }
                100% { background-position: 200% 0; }
            }
            
            @keyframes progressFill {
                from { width: 0%; }
                to { width: var(--target-width); }
            }
            
            @keyframes countUp {
                from { content: "0"; }
                to { content: var(--target-count); }
            }
            
            .progress-bar {
                position: relative;
                overflow: hidden;
                width: 0%;
                transition: width 2s cubic-bezier(0.4, 0, 0.2, 1);
            }
            
            .progress-bar::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
                animation: shimmer 2s infinite;
            }
            
            .progress-animated {
                animation: progressFill 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .progress-bar.fuel-effect {
                background: linear-gradient(90deg, 
                    var(--start-color) 0%, 
                    var(--mid-color) 50%, 
                    var(--end-color) 100%);
                background-size: 200% 100%;
                animation: fuelFlow 2s ease-out forwards, shimmer 2s infinite;
            }
            
            @keyframes fuelFlow {
                0% { 
                    width: 0%; 
                    background-position: 0% 50%;
                }
                100% { 
                    width: var(--target-width); 
                    background-position: 100% 50%;
                }
            }
            
            .progress-container {
                position: relative;
                overflow: hidden;
                border-radius: 9999px;
                background: #e5e7eb;
                box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
            }
            
            .progress-bar {
                height: 12px;
                border-radius: 9999px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.2);
                position: relative;
            }
            
            .progress-bar::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(90deg, 
                    rgba(255,255,255,0.1) 0%, 
                    rgba(255,255,255,0.3) 50%, 
                    rgba(255,255,255,0.1) 100%);
                border-radius: 9999px;
            }
        </style>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const progressBars = document.querySelectorAll('.progress-bar');
                const progressPercentages = document.querySelectorAll('.progress-percentage');
                
                // Set up fuel effect colors for each progress bar
                const fuelColors = {
                    'CAS': {
                        start: '#8b5cf6',
                        mid: '#ec4899',
                        end: '#8b5cf6'
                    },
                    'CIAS': {
                        start: '#14b8a6',
                        mid: '#06b6d4',
                        end: '#14b8a6'
                    },
                    'COF': {
                        start: '#3b82f6',
                        mid: '#60a5fa',
                        end: '#3b82f6'
                    },
                    'COED': {
                        start: '#ec4899',
                        mid: '#2563eb',
                        end: '#ec4899'
                    },
                    'IICT': {
                        start: '#6366f1',
                        mid: '#9333ea',
                        end: '#6366f1'
                    },
                    'IOES': {
                        start: '#06b6d4',
                        mid: '#2563eb',
                        end: '#06b6d4'
                    }
                };
                
                // Intersection Observer to trigger animation when elements come into view
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const progressBar = entry.target;
                            const percentage = progressBar.getAttribute('data-percentage');
                            const targetWidth = percentage + '%';
                            
                            // Get the college name to apply correct fuel colors
                            const card = progressBar.closest('.bg-white.rounded-xl');
                            const collegeName = card.querySelector('h3').textContent;
                            const colors = fuelColors[collegeName] || fuelColors['College of Technology'];
                            
                            // Apply fuel effect colors
                            if (progressBar instanceof HTMLElement) {
                                progressBar.style.setProperty('--start-color', colors.start);
                                progressBar.style.setProperty('--mid-color', colors.mid);
                                progressBar.style.setProperty('--end-color', colors.end);
                                progressBar.style.setProperty('--target-width', targetWidth);
                                
                                // Add fuel effect class
                                progressBar.classList.add('fuel-effect');
                                
                                // Animate the width directly
                                setTimeout(() => {
                                    progressBar.style.width = targetWidth;
                                }, 100);
                            }
                            
                            // Find corresponding percentage text and status text
                            const percentageText = progressBar.closest('.relative').querySelector('.progress-percentage');
                            const statusText = progressBar.closest('.relative').querySelector('.text-xs.font-semibold');
                            if (percentageText) {
                                animatePercentage(percentageText, parseInt(percentage), statusText);
                            }
                        }
                    });
                }, { threshold: 0.5 });
                
                // Observe all progress bars
                progressBars.forEach(bar => observer.observe(bar));
                
                // Animate percentage counter
                function animatePercentage(element, targetPercentage, statusElement) {
                    let currentPercentage = 0;
                    const increment = targetPercentage / 50; // 50 steps for smooth animation
                    const interval = setInterval(() => {
                        currentPercentage += increment;
                        if (currentPercentage >= targetPercentage) {
                            currentPercentage = targetPercentage;
                            clearInterval(interval);
                            
                            // Update status text to "Completed" if percentage is 100
                            if (statusElement && targetPercentage === 100) {
                                statusElement.textContent = 'Completed';
                            }
                        }
                        element.textContent = Math.round(currentPercentage) + '%';
                    }, 40); // 40ms per step = 2 seconds total
                }
                
                // Update last updated time
                function updateLastUpdated() {
                    const now = new Date();
                    const timeString = now.toLocaleTimeString('en-US', { 
                        hour12: true, 
                        hour: '2-digit', 
                        minute: '2-digit' 
                    });
                    const dateString = now.toLocaleDateString();
                    const lastUpdatedElement = document.getElementById('lastUpdated');
                    if (lastUpdatedElement) {
                        lastUpdatedElement.textContent = `${dateString} at ${timeString}`;
                    }
                }
                
                // Update every 5 minutes to simulate real-time updates
                setInterval(updateLastUpdated, 300000);
                
                // Add hover effects
                progressBars.forEach(bar => {
                    bar.addEventListener('mouseenter', function() {
                        if (this instanceof HTMLElement) {
                            this.style.transform = 'scaleY(1.2)';
                            this.style.transition = 'transform 0.3s ease';
                        }
                    });
                    
                    bar.addEventListener('mouseleave', function() {
                        if (this instanceof HTMLElement) {
                            this.style.transform = 'scaleY(1)';
                        }
                    });
                });
                
                // Add click to refresh functionality
                document.querySelectorAll('.bg-white.rounded-xl').forEach(card => {
                    card.addEventListener('click', function() {
                        if (this.classList.contains('refreshing')) return;
                        
                        this.classList.add('refreshing');
                        if (this instanceof HTMLElement) {
                            this.style.transform = 'scale(0.95)';
                        }
                        
                        setTimeout(() => {
                            if (this instanceof HTMLElement) {
                                this.style.transform = 'scale(1)';
                            }
                            this.classList.remove('refreshing');
                            
                            // Simulate data refresh
                            const progressBar = this.querySelector('.progress-bar');
                            const percentageText = this.querySelector('.progress-percentage');
                            const statusText = this.querySelector('.text-xs.font-semibold');
                            const targetPercentage = parseInt(progressBar.getAttribute('data-percentage'));
                            
                            // Add some randomness to simulate real updates
                            const randomChange = Math.floor(Math.random() * 5) - 2; // -2 to +2
                            const newPercentage = Math.max(0, Math.min(100, targetPercentage + randomChange));
                            
                            progressBar.setAttribute('data-percentage', newPercentage);
                            if (progressBar instanceof HTMLElement) {
                                progressBar.style.width = '0%';
                            }
                            progressBar.classList.remove('fuel-effect');
                            
                            setTimeout(() => {
                                if (progressBar instanceof HTMLElement) {
                                    progressBar.style.setProperty('--target-width', newPercentage + '%');
                                    progressBar.style.width = newPercentage + '%';
                                }
                                progressBar.classList.add('fuel-effect');
                                animatePercentage(percentageText, newPercentage, statusText);
                            }, 100);
                        }, 300);
                    });
                });
                
                // Trigger initial animation after a short delay
                setTimeout(() => {
                    progressBars.forEach(bar => {
                        if (bar.getBoundingClientRect().top < window.innerHeight) {
                            const event = new Event('intersect');
                            bar.dispatchEvent(event);
                        }
                    });
                    
                    // Check for completed progress bars on page load
                    progressBars.forEach(bar => {
                        const percentage = parseInt(bar.getAttribute('data-percentage'));
                        if (percentage === 100) {
                            const card = bar.closest('.bg-white.rounded-xl');
                            const statusText = card.querySelector('.text-xs.font-semibold');
                            if (statusText) {
                                statusText.textContent = 'Completed';
                            }
                        }
                    });
                }, 500);
            });
        </script>

        <!-- Congratulations Upload Complete Section -->
        <!-- <section id="mission" class="bg-gradient-to-br from-msu-main-color via-msu-deep-ocean to-msu-main-color py-20 relative overflow-hidden">
            <div class="absolute inset-0 bg-[url('/images/confetti.svg')] opacity-10 animate-pulse"></div>
            <div class="absolute inset-0 bg-[radial-gradient(circle_at_center,rgba(255,255,255,0.1)_0%,transparent_70%)]"></div>
            
            <div class="container mx-auto px-4 relative">
                <div class="max-w-4xl mx-auto text-center">
                    <div class="mb-10">
                        <div class="relative inline-block">
                            <div class="absolute inset-0 animate-ping">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-white/30" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                            </div>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-white transform hover:scale-110 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </div>
                    </div>
                    
                    <h2 class="text-4xl sm:text-5xl font-black text-white mb-6 animate-fadeInUp">
                        Mission Accomplished! 🎓
                    </h2>
                    
                    <div class="bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl p-10 mb-10 transform hover:scale-[1.02] transition-all duration-500">
                        <div class="text-6xl font-black bg-gradient-to-r from-msu-main-color to-msu-deep-ocean bg-clip-text text-transparent animate-pulse mb-3">
                            1,115
                        </div>
                        <p class="text-gray-700 text-lg font-medium">
                            Graduation Memories Captured & Preserved
                        </p>
                    </div>

                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-8 mb-10">
                        <div class="bg-white/95 backdrop-blur-xl rounded-2xl p-8 shadow-2xl transform hover:scale-105 transition-all duration-500">
                            <div class="text-3xl font-black text-msu-deep-ocean mb-2">
                                6
                            </div>
                            <p class="text-gray-700 font-medium">
                                Academic Colleges
                            </p>
                            <div class="w-12 h-1 bg-gradient-to-r from-msu-gold to-msu-deep-ocean mx-auto mt-4"></div>
                        </div>
                        <div class="bg-white/95 backdrop-blur-xl rounded-2xl p-8 shadow-2xl transform hover:scale-105 transition-all duration-500">
                            <div class="text-3xl font-black text-green-600 mb-2">
                                100%
                            </div>
                            <p class="text-gray-700 font-medium">
                                Success Rate
                            </p>
                            <div class="w-12 h-1 bg-gradient-to-r from-green-400 to-green-600 mx-auto mt-4"></div>
                        </div>
                    </div>

                    <p class="text-white text-lg font-medium leading-relaxed">
                        Every precious moment has been expertly captured and is now ready for you to cherish forever.
                        <span class="block mt-2 text-white/80 text-base italic">Browse through your memories in our comprehensive gallery.</span>
                    </p>
                </div>
            </div>
        </section> -->

        <!-- Enhanced Photo Gallery Search Section -->
        <section id="photos" class="relative bg-white py-16 sm:py-20 md:py-24 px-4 overflow-hidden">
            <div class="absolute inset-0 bg-[url('/images/MSU Seal New (Official).png')] opacity-5 bg-center bg-no-repeat bg-contain"></div>
            
            <div class="relative max-w-4xl mx-auto">
                <div class="bg-white/95 backdrop-blur-lg rounded-2xl shadow-2xl p-8 sm:p-10 md:p-12 border border-white/20">
                    <div class="text-center mb-10">
                        <h2 class="text-3xl sm:text-4xl md:text-5xl font-black bg-gradient-to-r from-msu-deep-ocean to-msu-main-color bg-clip-text text-transparent">Find Your Graduation Photos</h2>
                        <div class="w-24 h-1 bg-gradient-to-r from-msu-gold to-msu-deep-ocean mx-auto mt-4"></div>
                        <p class="text-gray-600 mt-6 text-sm sm:text-base leading-relaxed max-w-2xl mx-auto">
                           <br/>
                            <span class="italic text-msu-main-color">Examples: Bonifacio, Andres M. or Bonifacio Andres M</span>
                            <span class="italic text-msu-main-color">and enter your birth date to search the official gallery.</span>
                            <!-- <span class="block mt-2 font-semibold text-red-600">⚠️ Both fields are required for search.</span> -->
                        </p>
                        <div class="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
                            <h4 class="text-sm font-semibold text-blue-800 mb-2">💡 Search Tips:</h4>
                            <ul class="text-xs text-blue-700 space-y-1">
                                <li>• <strong>Both fields are required:</strong> Full name and date of birth</li>
                                <li>• Family name first: "Bonifacio, Andress M." or "Bonifacio Andress M" will find "Andress M. Bonifacio"</li>
                                <li>• Given name first: "Andress M. Bonifacio" will find "Bonifacio, Andress M."</li>
                                <li>• Initials work: "A Bonifacio" will find "Andress Bonifacio"</li>
                                <li>• Middle initial: "Andress M Bonifacio" will find "Andress M. Bonifacio"</li>
                                <li>• Symbols allowed: "Bonifacio, Andress M." or "Bonifacio. Andress M." work the same</li>
                                <li>• Birth date format: MM-DD-YYYY (e.g., 12-02-2004 for December 2, 2004)</li>
                            </ul>
                        </div>
                    </div>

                    <form id="photoSearchForm" class="space-y-4 sm:space-y-6">
                        <div class="flex flex-col sm:flex-row gap-4">
                            <div class="flex-1">
                                <label for="searchName" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
                                <input  
                                    type="text"
                                    name="name"
                                    id="searchName"
                                    placeholder="Enter Your Full Name (e.g., Bonifacio, Andres M. or Bonifacio Andres M)" 
                                    class="w-full px-5 py-4 rounded-xl border-2 border-msu-main-color/20 focus:border-msu-gold focus:ring-4 focus:ring-msu-gold/20 transition-all duration-300 text-lg placeholder:text-gray-400"
                                    aria-describedby="nameError"
                                />
                                <div id="nameError" class="hidden mt-2 p-3 rounded-lg bg-red-100 border border-red-300 text-red-800 text-sm flex items-center gap-2 shadow-md transition-all duration-300" role="alert" aria-live="polite">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"/></svg>
                                    <span>Full name is required to search for your graduation photos</span>
                                </div>
                            </div>
                            <div class="sm:w-48">
                                <label for="searchBirthdate" class="block text-sm font-medium text-gray-700 mb-1">Date of Birth</label>
                                <div class="relative">
                                    <input 
                                        type="text"
                                        name="birthdate"
                                        id="searchBirthdate"
                                        class="w-full px-5 py-4 rounded-xl border-2 border-msu-main-color/20 focus:border-msu-gold focus:ring-4 focus:ring-msu-gold/20 transition-all duration-300 text-lg placeholder:text-gray-400 pr-12"
                                        placeholder="MM-DD-YYYY"
                                        aria-describedby="birthdateError"
                                        readonly
                                    />
                                    <button 
                                        type="button"
                                        id="calendarButton"
                                        class="absolute right-3 top-1/2 transform -translate-y-1/2 p-2 text-msu-main-color hover:text-msu-gold transition-colors"
                                        aria-label="Open calendar"
                                    >
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                        </svg>
                                    </button>
                                </div>
                                <div id="birthdateError" class="hidden mt-2 p-3 rounded-lg bg-red-100 border border-red-300 text-red-800 text-sm flex items-center gap-2 shadow-md transition-all duration-300" role="alert" aria-live="polite">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"/></svg>
                                    <span id="birthdateErrorText">Date of birth is required to search for your graduation photos. Use MM-DD-YYYY format (e.g., 12-02-2004 for December 2, 2004)</span>
                                </div>
                                
                                <!-- Calendar Modal -->
                                <div id="calendarModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
                                    <div class="bg-white rounded-xl shadow-2xl max-w-sm w-full p-6">
                                        <div class="flex items-center justify-between mb-4">
                                            <h3 class="text-lg font-semibold text-gray-900">Select Birth Date</h3>
                                            <button id="closeCalendar" class="text-gray-400 hover:text-gray-600 transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                            </button>
                                        </div>
                                        
                                        <div class="flex items-center justify-between mb-4">
                                            <button id="prevMonth" class="p-2 text-gray-600 hover:text-msu-gold transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                                </svg>
                                            </button>
                                            <div class="flex items-center gap-2">
                                                <select id="monthSelect" class="text-lg font-medium text-gray-900 bg-transparent border-none focus:outline-none focus:ring-0 cursor-pointer">
                                                    <option value="0">January</option>
                                                    <option value="1">February</option>
                                                    <option value="2">March</option>
                                                    <option value="3">April</option>
                                                    <option value="4">May</option>
                                                    <option value="5">June</option>
                                                    <option value="6">July</option>
                                                    <option value="7">August</option>
                                                    <option value="8">September</option>
                                                    <option value="9">October</option>
                                                    <option value="10">November</option>
                                                    <option value="11">December</option>
                                                </select>
                                                <select id="yearSelect" class="text-lg font-medium text-gray-900 bg-transparent border-none focus:outline-none focus:ring-0 cursor-pointer">
                                                    <!-- Years will be populated by JavaScript -->
                                                </select>
                                            </div>
                                            <button id="nextMonth" class="p-2 text-gray-600 hover:text-msu-gold transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                                </svg>
                                            </button>
                                        </div>
                                        
                                        <div class="grid grid-cols-7 gap-1 mb-4">
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Sun</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Mon</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Tue</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Wed</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Thu</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Fri</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Sat</div>
                                    </div>
                                    
                                        <div id="calendarDays" class="grid grid-cols-7 gap-1 mb-4">
                                            <!-- Calendar days will be populated here -->
                                        </div>
                                        
                                        <div class="flex gap-2">
                                            <button type="button" id="clearDate" class="flex-1 px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors">
                                                Clear
                                            </button>
                                            <button type="button" id="confirmDate" class="flex-1 px-4 py-2 text-sm font-medium text-white bg-msu-gold rounded-lg hover:bg-msu-deep-ocean transition-colors">
                                                Confirm
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                        </div>
                                    </div>
                                    
                        <!-- Professional Warning Modal -->
                        <div id="warningModal" class="fixed inset-0 z-[999999] hidden">
                            <!-- Backdrop -->
                            <div class="absolute inset-0 bg-black/50 backdrop-blur-sm transition-opacity duration-300"></div>
                            
                            <!-- Modal Container -->
                            <div class="absolute inset-0 flex items-center justify-center p-4">
                                <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full transform transition-all duration-300 scale-95 opacity-0" id="modalContent">
                                    <!-- Modal Header -->
                                    <div class="relative p-6 pb-4">
                                        <!-- Decorative Top Border -->
                                        <div class="absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-msu-gold via-msu-deep-ocean to-msu-gold rounded-t-2xl"></div>
                                        
                                        <!-- Icon and Title -->
                                        <div class="flex items-center gap-4">
                                            <div class="flex-shrink-0">
                                                <div class="w-12 h-12 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center shadow-lg">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                                    </svg>
                                                </div>
                                            </div>
                                            <div class="flex-1">
                                                <h3 class="text-xl font-bold text-gray-800">Search Required</h3>
                                                <p class="text-gray-600 text-sm mt-1">Please provide search criteria</p>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Modal Body -->
                                    <div class="px-6 pb-6">
                                        <div class="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-xl p-4 border border-yellow-200">
                                            <p class="text-gray-700 leading-relaxed">
                                                To find your graduation photos, please fill in at least one of the following fields:
                                            </p>
                                            <ul class="mt-3 space-y-2 text-sm text-gray-600">
                                                <li class="flex items-start gap-2">
                                                    <span class="w-1.5 h-1.5 bg-msu-gold rounded-full mt-2 flex-shrink-0"></span>
                                                    <span><strong>Full Name:</strong> Enter your complete name (Examples: Bonifacio, Andres M. or Bonifacio Andres M)</span>
                                                </li>
                                                <li class="flex items-start gap-2">
                                                    <span class="w-1.5 h-1.5 bg-msu-gold rounded-full mt-2 flex-shrink-0"></span>
                                                    <span><strong>Date of Birth:</strong> Use MM-DD-YYYY format</span>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    
                                    <!-- Modal Footer -->
                                    <div class="px-6 pb-6">
                                        <button 
                                            id="closeWarningModal"
                                            class="w-full bg-gradient-to-r from-msu-gold via-msu-deep-ocean to-msu-gold text-white font-semibold py-3 px-6 rounded-xl hover:shadow-lg transform hover:scale-[1.02] transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-msu-gold/30"
                                        >
                                            Got it, I'll fill in the fields
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                                
                                <!-- Calendar Modal -->
                                <div id="calendarModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
                                    <div class="bg-white rounded-xl shadow-2xl max-w-sm w-full p-6">
                                        <div class="flex items-center justify-between mb-4">
                                            <h3 class="text-lg font-semibold text-gray-900">Select Birth Date</h3>
                                            <button id="closeCalendar" class="text-gray-400 hover:text-gray-600 transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                            </button>
                                        </div>
                                        
                                        <div class="flex items-center justify-between mb-4">
                                            <button id="prevMonth" class="p-2 text-gray-600 hover:text-msu-gold transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                                                </svg>
                                            </button>
                                            <div class="flex items-center gap-2">
                                                <select id="monthSelect" class="text-lg font-medium text-gray-900 bg-transparent border-none focus:outline-none focus:ring-0 cursor-pointer">
                                                    <option value="0">January</option>
                                                    <option value="1">February</option>
                                                    <option value="2">March</option>
                                                    <option value="3">April</option>
                                                    <option value="4">May</option>
                                                    <option value="5">June</option>
                                                    <option value="6">July</option>
                                                    <option value="7">August</option>
                                                    <option value="8">September</option>
                                                    <option value="9">October</option>
                                                    <option value="10">November</option>
                                                    <option value="11">December</option>
                                                </select>
                                                <select id="yearSelect" class="text-lg font-medium text-gray-900 bg-transparent border-none focus:outline-none focus:ring-0 cursor-pointer">
                                            <!-- Years will be populated by JavaScript -->
                                                </select>
                                        </div>
                                            <button id="nextMonth" class="p-2 text-gray-600 hover:text-msu-gold transition-colors">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                                                </svg>
                                            </button>
                                    </div>
                                    
                                    <div class="grid grid-cols-7 gap-1 mb-4">
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Sun</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Mon</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Tue</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Wed</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Thu</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Fri</div>
                                            <div class="text-center text-sm font-medium text-gray-500 py-2">Sat</div>
                                    </div>
                                    
                                        <div id="calendarDays" class="grid grid-cols-7 gap-1 mb-4">
                                            <!-- Calendar days will be populated here -->
                                    </div>
                                    
                                        <div class="flex gap-2">
                                            <button type="button" id="clearDate" class="flex-1 px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors">
                                            Clear
                                        </button>
                                            <button type="button" id="confirmDate" class="flex-1 px-4 py-2 text-sm font-medium text-white bg-msu-gold rounded-lg hover:bg-msu-deep-ocean transition-colors">
                                                Confirm
                                        </button>
                                </div>
                            </div>
                                </div>
                           
               
                        
                        <button 
                            type="submit"
                            id="searchButton"
                            class="w-full py-4 px-6 rounded-xl font-semibold text-base text-white bg-gradient-to-r from-msu-gold via-msu-deep-ocean to-msu-gold bg-size-200 hover:bg-pos-100 transition-all duration-300 transform hover:scale-[1.01] focus:outline-none focus:ring-4 focus:ring-msu-gold/30 shadow-xl border border-white/20 backdrop-blur-sm"
                            style="z-index: 1 !important;"
                        >
                            <span id="searchButtonText" class="flex items-center justify-center gap-3">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                </svg>
                                <span class="text-lg">Find My Photos</span>
                            </span>
                            <svg id="searchSpinner" class="hidden animate-spin h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        </button>
                    </form>

                    <div id="loadingState" class="mt-8 hidden">
                        <div class="flex flex-col items-center">
                            <div class="relative w-20 h-20">
                                <div class="absolute top-0 left-0 w-full h-full border-8 border-msu-gold/30 rounded-full animate-ping"></div>
                                <div class="absolute top-0 left-0 w-full h-full border-8 border-t-msu-gold border-msu-gold/30 rounded-full animate-spin"></div>
                            </div>
                            <span class="mt-4 text-msu-deep-ocean font-medium">Searching for your photos...</span>
                        </div>
                    </div>

                    <div id="errorState" class="mt-8 hidden">
                        <div class="bg-red-50 rounded-xl p-6 text-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 mx-auto text-red-500 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                            </svg>
                            <h3 class="text-xl font-bold text-red-700 mb-2">No Photos Found</h3>
                            <p class="text-red-600 mb-4">Try these suggestions:</p>
                            <ul class="text-red-600 text-sm mb-4 text-left max-w-md mx-auto">
                                <li>• Check spelling of your name</li>
                                <li>• Use your complete full name to avoid duplicates</li>
                                <li>• Include your birth date for more specific results</li>
                                <li>• Try different name formats: "Andress M. Bonifacio" or "Bonifacio, Andress M."</li>
                                <li>• Try initials: "A Bonifacio" for "Andress Bonifacio"</li>
                                <li>• Try family name first: "Bonifacio Andress M" for "Andress M. Bonifacio"</li>
                                <li>• Verify your birth date format (MM-DD-YYYY - e.g., 12-02-2004 for December 2, 2004)</li>
                            </ul>
                            <p class="text-red-600 mb-4">If you still can't find your photos, contact:</p>
                            <a href="https://www.msutcto.edu.ph/oipp" class="inline-flex items-center gap-3 text-msu-main-color hover:text-msu-deep-ocean transition-colors">
                                <img src="/images/commencement/oipp.png" alt="OIPP Logo" class="w-10 h-10" loading="lazy"/>
                                <span class="font-medium">MSU TCTO - Office of Information, Press and Publications</span>
                            </a>
                        </div>
                    </div>
                </div>

                <div id="photoGallery" class="mt-10 hidden">
                    <div class="sticky top-0 z-10 bg-white/95 backdrop-blur-md rounded-xl shadow-lg border border-msu-gold/20 p-4">
                        <div class="flex flex-wrap gap-4 items-center justify-between">
                            <label class="flex items-center gap-3 cursor-pointer group">
                                <input type="checkbox" id="selectAll" class="w-5 h-5 rounded border-2 border-msu-main-color text-msu-gold focus:ring-msu-gold/30 transition-all duration-300"/>
                                <span class="font-medium text-msu-deep-ocean group-hover:text-msu-gold transition-colors">Select All</span>
                            </label>
                            <button id="downloadSelected" class="px-6 py-2 rounded-lg bg-gradient-to-r from-msu-gold via-msu-deep-ocean to-msu-gold text-white font-semibold hover:bg-msu-deep-ocean transition-all duration-300 transform hover:scale-105">
                                Download Selected
                            </button>
                            <span id="photoCount" class="text-msu-main-color font-medium"></span>
                        </div>
                    </div>
                    <div id="photosGrid" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 mt-6">
                        <!-- Photo cards will be injected here -->
                    </div>
                </div>
            </div>
        </section>

        <!-- Important Information -->
        <!-- <section class="py-12 sm:py-16 md:py-20 bg-gray-50">
            <div class="container mx-auto px-4 sm:px-6 max-w-6xl">
                <div class="text-center mb-8 sm:mb-12 md:mb-16">
                    <h2 class="text-2xl sm:text-3xl md:text-4xl font-bold text-msu-deep-ocean mb-3 sm:mb-4">Important Information</h2>
                    <div class="w-16 sm:w-20 h-1 bg-msu-gold mx-auto"></div>
                </div>
                
                <div class="flex justify-center">
           
                    <div class="bg-white p-6 sm:p-8 rounded-lg sm:rounded-xl shadow-md hover:shadow-lg transition-shadow border border-gray-100 max-w-sm">
                        <div class="text-msu-main-color mb-3 sm:mb-4">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 sm:h-10 sm:w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                            </svg>
                        </div>
                        <h3 class="text-lg sm:text-xl font-bold mb-3 sm:mb-4">Live Stream</h3>
                        <p class="text-gray-600 mb-3 sm:mb-4 text-sm sm:text-base">Can't attend in person? The ceremony will be streamed live on our official Facebook page and YouTube channel.</p>
                        <a href="#" class="text-msu-main-color font-medium hover:underline text-sm sm:text-base">View Streaming Details →</a>
                    </div>
                </div>
            </div>
        </section> -->

        <!-- Footer -->
        <Footer class="relative z-50" />
    </main>
</Layout>

<script src="../js/animate.js"></script>
<script src="../js/loadinganim.js"></script>
<script src="../js/smoothscroll.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchForm = document.getElementById('photoSearchForm');
        const searchButton = document.getElementById('searchButton');
        const searchButtonText = document.getElementById('searchButtonText');
        const searchSpinner = document.getElementById('searchSpinner');
        const loadingState = document.getElementById('loadingState');
        const errorState = document.getElementById('errorState');
        const photoGallery = document.getElementById('photoGallery');
        const photosGrid = document.getElementById('photosGrid');
        const photoCount = document.getElementById('photoCount');
        const selectAllCheckbox = document.getElementById('selectAll');
        const downloadSelectedBtn = document.getElementById('downloadSelected');

        let lastSearchedPhotos = [];

        // Define currentDate to fix linter errors
        let currentDate = new Date();
        let selectedDate: Date | null = null;

        function renderMonthPicker() {
            const monthGrid = document.getElementById('monthGrid');
            if (!monthGrid) {
                console.error('Month grid element not found');
                return;
            }

            monthGrid.innerHTML = '';

            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 
                              'July', 'August', 'September', 'October', 'November', 'December'];
            const currentMonth = currentDate.getMonth();

            for (let month = 0; month < 12; month++) {
                const monthElement = document.createElement('div');
                monthElement.className = 'text-center py-1 sm:py-2 px-2 sm:px-3 cursor-pointer hover:bg-msu-main-color/20 rounded-lg transition-all duration-200 text-xs sm:text-sm font-medium';
                monthElement.textContent = monthNames[month];

                // Highlight current month
                if (month === currentMonth) {
                    monthElement.className = 'text-center py-1 sm:py-2 px-2 sm:px-3 bg-gradient-to-r from-msu-main-color to-msu-deep-ocean text-white rounded-lg font-semibold shadow-md';
                }

                monthElement.addEventListener('click', function() {
                    currentDate.setMonth(month);
                    renderCalendar();
                    document.getElementById('monthPicker')?.classList.add('hidden');
                });

                monthGrid.appendChild(monthElement);
            }
        }

        // Render year picker
        function renderYearPicker() {
            const yearGrid = document.getElementById('yearGrid');
            if (!yearGrid) {
                console.error('Year grid element not found');
                return;
            }

            yearGrid.innerHTML = '';

            const currentYear = currentDate.getFullYear();
            const startYear = currentYear - 50; // Show 50 years back
            const endYear = currentYear + 10; // Show 10 years forward

            for (let year = startYear; year <= endYear; year++) {
                const yearElement = document.createElement('div');
                yearElement.className = 'text-center py-1 sm:py-2 px-2 sm:px-3 cursor-pointer hover:bg-msu-main-color/20 rounded-lg transition-all duration-200 text-xs sm:text-sm font-medium';
                yearElement.textContent = String(year);

                // Highlight current year
                if (year === currentYear) {
                    yearElement.className = 'text-center py-1 sm:py-2 px-2 sm:px-3 bg-gradient-to-r from-msu-main-color to-msu-deep-ocean text-white rounded-lg font-semibold shadow-md';
                }

                yearElement.addEventListener('click', function() {
                    currentDate.setFullYear(year);
                    renderCalendar();
                    document.getElementById('yearPicker')?.classList.add('hidden');
                });

                yearGrid.appendChild(yearElement);
            }
        }

        // Global function to toggle calendar - SIMPLIFIED VERSION
        (window as any).toggleCalendar = function(event) {
            // Prevent form submission
            if (event) {
                event.preventDefault();
                event.stopPropagation();
            }
            
            console.log('=== TOGGLE CALENDAR CALLED ===');
            
            const calendarPicker = document.getElementById('calendarPicker');
            const searchButton = document.getElementById('searchButton');
            
            if (!calendarPicker) {
                console.error('❌ Calendar picker not found');
                return false;
            }
            
            console.log('✅ Calendar picker found');
            console.log('Device width:', window.innerWidth);
            console.log('Current display:', calendarPicker.style.display);
            console.log('Current visibility:', calendarPicker.style.visibility);
            
            // SIMPLE SHOW - just change display to flex
            calendarPicker.style.display = 'flex';
            calendarPicker.style.visibility = 'visible';
            calendarPicker.style.opacity = '1';
            
            // HIDE THE SEARCH BUTTON
            if (searchButton) {
                searchButton.style.display = 'none';
                searchButton.style.visibility = 'hidden';
                searchButton.style.opacity = '0';
                searchButton.style.pointerEvents = 'none';
                console.log('✅ Search button hidden');
            }
            
            console.log('✅ Calendar should now be visible');
            console.log('New display:', calendarPicker.style.display);
            console.log('New visibility:', calendarPicker.style.visibility);
            
            // Prevent body scroll
            document.body.style.overflow = 'hidden';
            
            // Render calendar content
            renderCalendar();
            
            // Force repaint
            setTimeout(() => {
                calendarPicker.style.display = 'flex';
                console.log('✅ Calendar display confirmed after timeout');
            }, 100);
            
            return false;
        };

        // Global function to close calendar picker - SIMPLIFIED VERSION
        (window as any).closeCalendarPicker = function() {
            console.log('=== CLOSE CALENDAR CALLED ===');
            
            const calendarPicker = document.getElementById('calendarPicker');
            const searchButton = document.getElementById('searchButton');
            
            if (calendarPicker) {
                console.log('✅ Hiding calendar');
                calendarPicker.style.display = 'none';
                calendarPicker.style.visibility = 'hidden';
                calendarPicker.style.opacity = '0';
            }
            
            // SHOW THE SEARCH BUTTON AGAIN
            if (searchButton) {
                searchButton.style.display = 'block';
                searchButton.style.visibility = 'visible';
                searchButton.style.opacity = '1';
                searchButton.style.pointerEvents = 'auto';
                console.log('✅ Search button shown again');
            }
            
            // Hide month and year pickers
            const monthPicker = document.getElementById('monthPicker');
            const yearPicker = document.getElementById('yearPicker');
            if (monthPicker) monthPicker.classList.add('hidden');
            if (yearPicker) yearPicker.classList.add('hidden');
            
            // Restore body scroll
            document.body.style.overflow = 'auto';
            
            console.log('✅ Calendar hidden');
        }

        // Initialize calendar
        function initCalendar() {
            const calendarButton = document.getElementById('calendarButton');
            const calendarPicker = document.getElementById('calendarPicker');
            const prevMonth = document.getElementById('prevMonth');
            const nextMonth = document.getElementById('nextMonth');
            const closeCalendar = document.getElementById('closeCalendar');
            const clearDate = document.getElementById('clearDate');
            const currentMonth = document.getElementById('currentMonth');
            const currentYear = document.getElementById('currentYear');
            const monthPicker = document.getElementById('monthPicker');
            const closeMonthPicker = document.getElementById('closeMonthPicker');
            const yearPicker = document.getElementById('yearPicker');
            const closeYearPicker = document.getElementById('closeYearPicker');
            const photoSearchForm = document.getElementById('photoSearchForm');

            if (!calendarButton || !calendarPicker || !prevMonth || !nextMonth || !closeCalendar || !clearDate || !currentMonth || !currentYear || !monthPicker || !closeMonthPicker || !yearPicker || !closeYearPicker) {
                console.error('Calendar elements not found');
                return;
            }
            
            // Prevent form submission when calendar button is clicked
            if (photoSearchForm) {
                photoSearchForm.addEventListener('submit', function(e) {
                    // Only prevent if calendar button was clicked
                    if (e.submitter && e.submitter.id === 'calendarButton') {
                        e.preventDefault();
                        e.stopPropagation();
                        return false;
                    }
                });
            }

            // Toggle calendar
            calendarButton.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                console.log('Calendar button clicked');
                console.log('Device width:', window.innerWidth);
                console.log('Calendar picker before toggle:', calendarPicker.classList.contains('hidden'));
                calendarPicker.classList.toggle('hidden');
                console.log('Calendar picker after toggle:', calendarPicker.classList.contains('hidden'));
                
                if (!calendarPicker.classList.contains('hidden')) {
                    console.log('Rendering calendar...');
                    // Prevent body scroll on mobile
                    if (window.innerWidth <= 768) {
                        document.body.style.position = 'fixed';
                        document.body.style.width = '100%';
                    }
                    document.body.style.overflow = 'hidden';
                    
                    // Move the search button behind the calendar
                    const searchButton = document.getElementById('searchButton');
                    if (searchButton) {
                        searchButton.style.zIndex = '9998';
                        searchButton.style.position = 'relative';
                    }
                    
                    // Try to render immediately, then retry if needed
                    renderCalendar();
                    
                    // If elements are still not found, retry after a short delay
                    setTimeout(() => {
                        const currentMonthButton = document.getElementById('currentMonth');
                        const currentYearButton = document.getElementById('currentYear');
                        if (!currentMonthButton || !currentYearButton) {
                            console.log('Retrying calendar render...');
                            renderCalendar();
                        }
                    }, 100);
                } else {
                    // Use the new close function when closing
                    (window as any).closeCalendarPicker();
                }
            });

            // Add touch event support for mobile
            calendarButton.addEventListener('touchstart', function(e) {
                e.preventDefault();
                console.log('Calendar button touched');
            }, { passive: false });

            // Close calendar when clicking outside (now handled by backdrop)
            // The backdrop click is handled by the onclick="closeCalendarPicker()" in HTML

            // Navigation
            prevMonth.addEventListener('click', function() {
                currentDate.setMonth(currentDate.getMonth() - 1);
                renderCalendar();
            });

            nextMonth.addEventListener('click', function() {
                currentDate.setMonth(currentDate.getMonth() + 1);
                renderCalendar();
            });

            // Month picker toggle
            currentMonth.addEventListener('click', function() {
                monthPicker.classList.toggle('hidden');
                if (!monthPicker.classList.contains('hidden')) {
                    renderMonthPicker();
                }
            });

            // Close month picker
            closeMonthPicker.addEventListener('click', function() {
                monthPicker.classList.add('hidden');
            });

            // Year picker toggle
            currentYear.addEventListener('click', function() {
                yearPicker.classList.toggle('hidden');
                if (!yearPicker.classList.contains('hidden')) {
                    renderYearPicker();
                }
            });

            // Close year picker
            closeYearPicker.addEventListener('click', function() {
                yearPicker.classList.add('hidden');
            });

            // Close and clear buttons
            closeCalendar.addEventListener('click', function() {
                (window as any).closeCalendarPicker();
            });

            clearDate.addEventListener('click', function() {
                selectedDate = null;
                const birthdateInput = document.getElementById('searchBirthdate') as HTMLInputElement;
                if (birthdateInput) {
                    birthdateInput.value = '';
                }
                (window as any).closeCalendarPicker();
            });
        }

        // Render calendar
        function renderCalendar() {
            // Try multiple ways to find elements
            const currentMonthButton = document.getElementById('currentMonth') || document.querySelector('[id="currentMonth"]');
            const currentYearButton = document.getElementById('currentYear') || document.querySelector('[id="currentYear"]');
            const calendarDays = document.getElementById('calendarDays') || document.querySelector('[id="calendarDays"]');
            const birthdateInputElement = document.getElementById('searchBirthdate') || document.querySelector('[id="searchBirthdate"]');
            const birthdateInput = birthdateInputElement as HTMLInputElement;
            const calendarPicker = document.getElementById('calendarPicker') || document.querySelector('[id="calendarPicker"]');

            console.log('Calendar render elements:');
            console.log('currentMonthButton:', currentMonthButton);
            console.log('currentYearButton:', currentYearButton);
            console.log('calendarDays:', calendarDays);
            console.log('birthdateInput:', birthdateInput);
            console.log('calendarPicker:', calendarPicker);

            // Check if all required elements exist
            if (!currentMonthButton) {
                console.error('currentMonthButton element not found');
                return;
            }
            if (!currentYearButton) {
                console.error('currentYearButton element not found');
                return;
            }
            if (!calendarDays) {
                console.error('calendarDays element not found');
                return;
            }
            if (!birthdateInput) {
                console.error('birthdateInput element not found');
                return;
            }
            if (!calendarPicker) {
                console.error('calendarPicker element not found');
                return;
            }

            // Update header
            const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 
                              'July', 'August', 'September', 'October', 'November', 'December'];
            const currentMonthName = monthNames[currentDate.getMonth()];
            const currentYear = currentDate.getFullYear();
            
            // Update the month button text by finding the span inside it
            const monthSpan = currentMonthButton.querySelector('span');
            if (monthSpan) {
                monthSpan.textContent = currentMonthName;
            } else {
                // If no span found, update the button text directly
                currentMonthButton.textContent = currentMonthName;
            }
            
            // Update the year button text by finding the span inside it
            const yearSpan = currentYearButton.querySelector('span');
            if (yearSpan) {
                yearSpan.textContent = String(currentYear);
            } else {
                // If no span found, update the button text directly
                currentYearButton.textContent = String(currentYear);
            }

            console.log('Calendar rendering - Month:', currentMonthName, 'Year:', currentYear);

            // Clear previous days
            calendarDays.innerHTML = '';

            // Get first day of month and number of days
            const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
            const startDate = new Date(firstDay);
            startDate.setDate(startDate.getDate() - firstDay.getDay());

            console.log('Calendar start date:', startDate);

            // Generate calendar days
            for (let i = 0; i < 42; i++) {
                const dayDate = new Date(startDate);
                dayDate.setDate(startDate.getDate() + i);

                const dayElement = document.createElement('div');
                dayElement.className = 'text-center py-1.5 sm:py-2 md:py-3 cursor-pointer hover:bg-msu-main-color/10 rounded-md sm:rounded-lg md:rounded-xl transition-all duration-200 font-medium text-[10px] sm:text-xs md:text-sm flex items-center justify-center min-h-[24px] sm:min-h-[28px] md:min-h-[32px]';

                // Check if day is in current month
                if (dayDate.getMonth() === currentDate.getMonth()) {
                    const dayNumber = dayDate.getDate();
                    dayElement.textContent = String(dayNumber);
                    
                    // Check if this is the selected date
                    if (selectedDate && dayDate.toDateString() === selectedDate.toDateString()) {
                        dayElement.className = 'text-center py-1.5 sm:py-2 md:py-3 bg-gradient-to-r from-msu-main-color to-msu-deep-ocean text-white rounded-md sm:rounded-lg md:rounded-xl font-semibold shadow-lg transform scale-105 flex items-center justify-center min-h-[24px] sm:min-h-[28px] md:min-h-[32px]';
                    } else {
                        dayElement.className += ' text-gray-700 hover:text-msu-main-color';
                    }

                    // Check if it's today
                    const today = new Date();
                    if (dayDate.toDateString() === today.toDateString()) {
                        dayElement.className += ' ring-2 ring-msu-gold/50';
                    }

                    // Add click event - ONLY SET DATE, NO SEARCH
                    dayElement.addEventListener('click', function() {
                        selectedDate = new Date(dayDate);
                        
                        // Format date as MM/DD/YY
                        const month = String(selectedDate.getMonth() + 1).padStart(2, '0');
                        const day = String(selectedDate.getDate()).padStart(2, '0');
                        const year = String(selectedDate.getFullYear()).slice(-2);
                        
                        // ONLY SET THE DATE INPUT - NO SEARCH TRIGGER
                        birthdateInput.value = `${month}/${day}/${year}`;
                        
                        // Close calendar after date selection
                        (window as any).closeCalendarPicker();
                        
                        // Update calendar display
                        renderCalendar();
                        
                        console.log('✅ Date selected:', birthdateInput.value, '- User must click "Find My Photos" to search');
                    });
                } else {
                    const dayNumber = dayDate.getDate();
                    dayElement.textContent = String(dayNumber);
                    dayElement.className += ' text-gray-300 cursor-default hover:bg-transparent';
                }

                calendarDays.appendChild(dayElement);
            }

            console.log('Calendar rendered with', calendarDays.children.length, 'days');
            console.log('Current month text:', currentMonthButton.textContent);
            console.log('Current year text:', currentYearButton.textContent);
        }

        // Initialize calendar when page loads
        console.log('Initializing calendar...');
        
        // Function to initialize calendar with retry mechanism
        function initializeCalendarWithRetry() {
            const calendarButton = document.getElementById('calendarButton');
            console.log('Calendar button found:', calendarButton);
            
            if (!calendarButton) {
                console.log('Calendar button not found, retrying in 100ms...');
                setTimeout(initializeCalendarWithRetry, 100);
                return;
            }
            
            initCalendar();
            console.log('Calendar initialization complete');
        }
        
        // Start initialization
        initializeCalendarWithRetry();
        
        // Ensure search button is always visible on page load
        function ensureSearchButtonVisible() {
            const searchButton = document.getElementById('searchButton');
            const calendarPicker = document.getElementById('calendarPicker');
            
            if (searchButton && calendarPicker) {
                // If calendar is not visible, ensure search button is visible
                if (calendarPicker.style.display === 'none' || 
                    calendarPicker.style.visibility === 'hidden' ||
                    calendarPicker.classList.contains('hidden')) {
                    searchButton.style.display = 'block';
                    searchButton.style.visibility = 'visible';
                    searchButton.style.opacity = '1';
                    searchButton.style.pointerEvents = 'auto';
                    console.log('✅ Search button restored to visible state');
                }
            }
        }
        
        // Call on page load and after a short delay
        ensureSearchButtonVisible();
        setTimeout(ensureSearchButtonVisible, 100);
        setTimeout(ensureSearchButtonVisible, 500);
        
        // EMERGENCY CALENDAR SHOW FUNCTION
        (window as any).forceShowCalendar = function() {
            console.log('🚨 FORCE SHOWING CALENDAR 🚨');
            const calendarPicker = document.getElementById('calendarPicker');
            if (calendarPicker) {
                // Remove all classes and set correct styling
                calendarPicker.className = '';
                
                // Force all display properties
                calendarPicker.style.cssText = `
                    position: fixed !important;
                    z-index: 9999999 !important;
                    top: 0 !important;
                    left: 0 !important;
                    right: 0 !important;
                    bottom: 0 !important;
                    width: 100vw !important;
                    height: 100vh !important;
                    display: flex !important;
                    align-items: center !important;
                    justify-content: center !important;
                    visibility: visible !important;
                    opacity: 1 !important;
                    background-color: rgba(0,0,0,0.2) !important;
                    backdrop-filter: blur(2px) !important;
                    pointer-events: auto !important;
                `;
                
                console.log('✅ Calendar forced to show');
                console.log('Calendar element:', calendarPicker);
                console.log('Calendar style:', calendarPicker.style.cssText);
                
                // Render calendar content
                renderCalendar();
            } else {
                console.log('❌ Calendar element not found');
            }
        };
        
        // Add comprehensive test functions for debugging
        (window as any).testShowCalendar = function() {
            const calendarPicker = document.getElementById('calendarPicker');
            if (calendarPicker) {
                console.log('=== CALENDAR DEBUG TEST ===');
                console.log('Calendar element found:', calendarPicker);
                console.log('Initial classes:', calendarPicker.className);
                console.log('Initial display:', calendarPicker.style.display);
                console.log('Initial visibility:', calendarPicker.style.visibility);
                console.log('Initial opacity:', calendarPicker.style.opacity);
                
                // Force show the calendar
                calendarPicker.classList.remove('hidden');
                calendarPicker.style.display = 'flex !important';
                calendarPicker.style.visibility = 'visible !important';
                calendarPicker.style.opacity = '1 !important';
                calendarPicker.style.pointerEvents = 'auto !important';
                calendarPicker.style.zIndex = '99999 !important';
                
                console.log('After changes:');
                console.log('Classes:', calendarPicker.className);
                console.log('Display:', calendarPicker.style.display);
                console.log('Visibility:', calendarPicker.style.visibility);
                console.log('Opacity:', calendarPicker.style.opacity);
                console.log('Z-index:', calendarPicker.style.zIndex);
                console.log('Calendar should now be visible');
                
                // Test backdrop
                const backdrop = calendarPicker.querySelector('.absolute.inset-0') as HTMLElement;
                if (backdrop) {
                    backdrop.style.display = 'block';
                    backdrop.style.visibility = 'visible';
                    backdrop.style.opacity = '1';
                    console.log('Backdrop also made visible');
                }
            } else {
                console.log('❌ Calendar picker not found');
            }
        };
        
        (window as any).testCalendarButton = function() {
            const calendarButton = document.getElementById('calendarButton');
            if (calendarButton) {
                console.log('=== BUTTON DEBUG TEST ===');
                console.log('Calendar button found:', calendarButton);
                console.log('Button classes:', calendarButton.className);
                console.log('Button style:', calendarButton.style.cssText);
                console.log('Button clickable:', calendarButton.offsetWidth > 0 && calendarButton.offsetHeight > 0);
                
                // Test click
                calendarButton.click();
                console.log('Button click triggered');
            } else {
                console.log('❌ Calendar button not found');
            }
        };
        
        (window as any).testAllCalendarElements = function() {
            console.log('=== COMPREHENSIVE CALENDAR TEST ===');
            console.log('Device width:', window.innerWidth);
            console.log('Device height:', window.innerHeight);
            
            const elements = [
                'calendarButton',
                'calendarPicker',
                'prevMonth',
                'nextMonth',
                'currentMonth',
                'currentYear',
                'calendarDays'
            ];
            
            elements.forEach(id => {
                const element = document.getElementById(id);
                console.log(`${id}:`, element ? '✅ Found' : '❌ Not found');
                if (element) {
                    console.log(`  - Classes: ${element.className}`);
                    console.log(`  - Visible: ${element.offsetWidth > 0 && element.offsetHeight > 0}`);
                }
            });
        };
        
        // Mobile-specific calendar test
        if (window.innerWidth <= 768) {
            console.log('Mobile device detected, testing calendar...');
            setTimeout(() => {
                const calendarButton = document.getElementById('calendarButton');
                const calendarPicker = document.getElementById('calendarPicker');
                console.log('Mobile test - Calendar button:', calendarButton);
                console.log('Mobile test - Calendar picker:', calendarPicker);
                if (calendarButton) {
                    console.log('Mobile test - Calendar button is clickable');
                    // Test if calendar can be shown
                    calendarButton.addEventListener('click', function() {
                        console.log('Mobile calendar button clicked via event listener');
                        (window as any).toggleCalendar();
                    });
                }
            }, 1000);
        }

        // Add keyboard support for calendar
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                const calendarPicker = document.getElementById('calendarPicker');
                if (calendarPicker && !calendarPicker.classList.contains('hidden')) {
                    (window as any).closeCalendarPicker();
                }
            }
        });

        // Hide all states initially
        function hideAllStates() {
            loadingState.classList.add('hidden');
            errorState.classList.add('hidden');
            photoGallery.classList.add('hidden');
        }

        // Show loading state
        function showLoading() {
            hideAllStates();
            loadingState.classList.remove('hidden');
            setButtonDisabled(searchButton, true);
            searchButtonText.textContent = 'Searching...';
            searchSpinner.classList.remove('hidden');
        }

        // Show error state
        function showError() {
            hideAllStates();
            errorState.classList.remove('hidden');
            setButtonDisabled(searchButton, false);
            searchButtonText.textContent = 'Find My Photos';
            searchSpinner.classList.add('hidden');
        }

        // For disabling buttons, cast to HTMLButtonElement
        function setButtonDisabled(btn, disabled) {
            if (btn instanceof HTMLButtonElement) {
                btn.disabled = disabled;
            }
        }

        // Warning Modal Functions
        function showWarningModal() {
            hideAllStates();
            const warningModal = document.getElementById('warningModal');
            const modalContent = document.getElementById('modalContent');
            
            if (warningModal && modalContent) {
                warningModal.classList.remove('hidden');
                
                // Trigger animation after a brief delay
                setTimeout(() => {
                    modalContent.classList.remove('scale-95', 'opacity-0');
                    modalContent.classList.add('scale-100', 'opacity-100');
                }, 10);
            }
        }

        function hideWarningModal() {
            const warningModal = document.getElementById('warningModal');
            const modalContent = document.getElementById('modalContent');
            
            if (warningModal && modalContent) {
                modalContent.classList.add('scale-95', 'opacity-0');
                modalContent.classList.remove('scale-100', 'opacity-100');
                
                setTimeout(() => {
                    warningModal.classList.add('hidden');
                }, 300);
            }
        }

        // Enhanced warning modal for both fields required
        function showEnhancedWarningModal() {
            hideAllStates();
            const warningModal = document.getElementById('warningModal');
            const modalContent = document.getElementById('modalContent');
            
            if (warningModal && modalContent) {
                // Update modal content for enhanced warning
                const modalBody = warningModal.querySelector('.px-6.pb-6');
                if (modalBody) {
                    modalBody.innerHTML = `
                        <div class="bg-gradient-to-r from-red-50 to-orange-50 rounded-xl p-4 border border-red-200">
                            <p class="text-gray-700 leading-relaxed font-semibold">
                                ⚠️ Both fields are required to search for your graduation photos:
                            </p>
                            <ul class="mt-3 space-y-2 text-sm text-gray-600">
                                <li class="flex items-start gap-2">
                                    <span class="w-1.5 h-1.5 bg-red-500 rounded-full mt-2 flex-shrink-0"></span>
                                    <span><strong>Full Name:</strong> Enter your complete name (Examples: Bonifacio, Andres M. or Bonifacio Andres M)</span>
                                </li>
                                <li class="flex items-start gap-2">
                                    <span class="w-1.5 h-1.5 bg-red-500 rounded-full mt-2 flex-shrink-0"></span>
                                    <span><strong>Date of Birth:</strong> Use MM-DD-YYYY format (e.g., 12-02-2004 for December 2, 2004)</span>
                                </li>
                            </ul>
                            <div class="mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                                <p class="text-yellow-800 text-sm font-medium">
                                    💡 Tip: Both fields must be filled to ensure accurate search results and avoid duplicates.
                                </p>
                            </div>
                        </div>
                    `;
                }
                
                warningModal.classList.remove('hidden');
                
                // Trigger animation after a brief delay
                setTimeout(() => {
                    modalContent.classList.remove('scale-95', 'opacity-0');
                    modalContent.classList.add('scale-100', 'opacity-100');
                }, 10);
            }
        }

        // Close modal when clicking backdrop or close button
        document.addEventListener('click', function(e) {
            const warningModal = document.getElementById('warningModal');
            const closeWarningModal = document.getElementById('closeWarningModal');
            
            if (e.target === warningModal) {
                hideWarningModal();
            }
            
            if (e.target === closeWarningModal) {
                hideWarningModal();
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                hideWarningModal();
            }
        });

        // Show photo gallery
        function showPhotoGallery(photos) {
            hideAllStates();
            photoGallery.classList.remove('hidden');
            photoCount.textContent = photos.length;
            lastSearchedPhotos = photos;
            
            // Clear existing photos
            photosGrid.innerHTML = '';
            
            // Populate photos
            photos.forEach((photo, index) => {
                const photoCard = document.createElement('div');
                photoCard.className = 'relative group cursor-pointer';
                photoCard.innerHTML = `
                    <div class="aspect-square rounded-lg overflow-hidden bg-gray-200">
                        <img 
                            src="${photo.mainImage?.asset?.url || photo.mainImage?.url || '/images/placeholder-photo.jpg'}" 
                            alt="${photo.mainImage?.alt || 'Graduation photo'}"
                            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                            loading="lazy"
                        />
                    </div>
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 rounded-lg flex items-center justify-center">
                        <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                            <label class="flex items-center gap-2 text-white text-xs sm:text-sm">
                                <input type="checkbox" class="photo-checkbox h-4 w-4 sm:h-5 sm:w-5 text-msu-main-color" data-photo-id="${photo._id}">
                                <span>Select</span>
                            </label>
                        </div>
                    </div>
                `;
                photosGrid.appendChild(photoCard);
            });
            
            // Reset button state
            setButtonDisabled(searchButton, false);
            searchButtonText.textContent = 'Find My Photos';
            searchSpinner.classList.add('hidden');
            
            // Scroll to gallery on mobile
            if (window.innerWidth <= 768) {
                photoGallery.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }

        // Handle form submission
        searchForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Ensure search button is visible and clickable
            const searchButton = document.getElementById('searchButton');
            if (searchButton) {
                searchButton.style.display = 'block';
                searchButton.style.visibility = 'visible';
                searchButton.style.opacity = '1';
                searchButton.style.pointerEvents = 'auto';
            }
            
            const nameInput = document.getElementById('searchName');
            const birthdateInput = document.getElementById('searchBirthdate');
            const name = (nameInput instanceof HTMLInputElement) ? nameInput.value.trim() : '';
            const birthdate = (birthdateInput instanceof HTMLInputElement) ? birthdateInput.value.trim() : '';
            
            // Both fields must be filled
            if (!name || !birthdate) {
                // Show specific error messages for missing fields
                const nameError = document.getElementById('nameError');
                const birthdateError = document.getElementById('birthdateError');
                
                if (!name && nameError) {
                    nameError.classList.remove('hidden');
                    nameError.classList.add('animate-fade-in');
                    nameInput?.focus();
                    nameInput?.scrollIntoView({behavior: 'smooth', block: 'center'});
                } else if (nameError) {
                    nameError.classList.add('hidden');
                    nameError.classList.remove('animate-fade-in');
                }
                
                if (!birthdate && birthdateError) {
                    birthdateError.classList.remove('hidden');
                    birthdateError.classList.add('animate-fade-in');
                    birthdateInput?.focus();
                    birthdateInput?.scrollIntoView({behavior: 'smooth', block: 'center'});
                } else if (birthdateError) {
                    birthdateError.classList.add('hidden');
                    birthdateError.classList.remove('animate-fade-in');
                }
                
                // Show enhanced warning modal
                showEnhancedWarningModal();
                return;
            }
            
            // Validate birth date format if provided
            if (birthdate) {
                const dateFormat1 = /^\d{2}-\d{2}-\d{4}$/; // MM-DD-YYYY
                const dateFormat2 = /^\d{1,2}\/\d{1,2}\/\d{2}$/; // MM/DD/YY
                const birthdateError = document.getElementById('birthdateError');
                if (!dateFormat1.test(birthdate) && !dateFormat2.test(birthdate)) {
                    // Show error message
                    birthdateError.classList.remove('hidden');
                    birthdateError.classList.add('animate-fade-in');
                    document.getElementById('searchBirthdate').focus();
                    document.getElementById('searchBirthdate').scrollIntoView({behavior: 'smooth', block: 'center'});
                    return;
                } else {
                    // Hide error if valid
                    birthdateError.classList.add('hidden');
                    birthdateError.classList.remove('animate-fade-in');
                }
            }
            
            showLoading();
            
            try {
                // Format birthdate to match Sanity format (YYYY-MM-DD)
                const formattedBirthdate = birthdate;
                
                console.log('Searching for:', { name, birthDate: formattedBirthdate });
                
                // Make API call to search for photos
                const response = await fetch('/api/search-commencement-photos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: name,
                        birthDate: formattedBirthdate
                    })
                });
                
                if (!response.ok) {
                    throw new Error('Failed to search photos');
                }
                
                const photos = await response.json();
                console.log('API response:', photos);
                
                if (Array.isArray(photos) && photos.length > 0) {
                    showPhotoGallery(photos);
                } else {
                    showError();
                }
            } catch (error) {
                console.error('Error searching photos:', error);
                showError();
            }
        });
        
        // Also add direct click event to search button as backup
        searchButton.addEventListener('click', async function(e) {
            e.preventDefault();
            console.log('Search button clicked directly');
            
            // Ensure search button is visible and clickable
            const searchButton = document.getElementById('searchButton');
            if (searchButton) {
                searchButton.style.display = 'block';
                searchButton.style.visibility = 'visible';
                searchButton.style.opacity = '1';
                searchButton.style.pointerEvents = 'auto';
            }
            
            const nameInput = document.getElementById('searchName');
            const birthdateInput = document.getElementById('searchBirthdate');
            const name = (nameInput instanceof HTMLInputElement) ? nameInput.value.trim() : '';
            const birthdate = (birthdateInput instanceof HTMLInputElement) ? birthdateInput.value.trim() : '';
            
            // Both fields must be filled
            if (!name || !birthdate) {
                // Show specific error messages for missing fields
                const nameError = document.getElementById('nameError');
                const birthdateError = document.getElementById('birthdateError');
                
                if (!name && nameError) {
                    nameError.classList.remove('hidden');
                    nameError.classList.add('animate-fade-in');
                    nameInput?.focus();
                    nameInput?.scrollIntoView({behavior: 'smooth', block: 'center'});
                } else if (nameError) {
                    nameError.classList.add('hidden');
                    nameError.classList.remove('animate-fade-in');
                }
                
                if (!birthdate && birthdateError) {
                    birthdateError.classList.remove('hidden');
                    birthdateError.classList.add('animate-fade-in');
                    birthdateInput?.focus();
                    birthdateInput?.scrollIntoView({behavior: 'smooth', block: 'center'});
                } else if (birthdateError) {
                    birthdateError.classList.add('hidden');
                    birthdateError.classList.remove('animate-fade-in');
                }
                
                // Show enhanced warning modal
                showEnhancedWarningModal();
                return;
            }
            
            // Validate birth date format if provided
            if (birthdate) {
                const dateFormat1 = /^\d{2}-\d{2}-\d{4}$/; // MM-DD-YYYY
                const dateFormat2 = /^\d{1,2}\/\d{1,2}\/\d{2}$/; // MM/DD/YY
                const birthdateError = document.getElementById('birthdateError');
                if (!dateFormat1.test(birthdate) && !dateFormat2.test(birthdate)) {
                    // Show error message
                    birthdateError.classList.remove('hidden');
                    birthdateError.classList.add('animate-fade-in');
                    document.getElementById('searchBirthdate').focus();
                    document.getElementById('searchBirthdate').scrollIntoView({behavior: 'smooth', block: 'center'});
                    return;
                } else {
                    // Hide error if valid
                    birthdateError.classList.add('hidden');
                    birthdateError.classList.remove('animate-fade-in');
                }
            }
            
            showLoading();
            
            try {
                // Format birthdate to match Sanity format (YYYY-MM-DD)
                const formattedBirthdate = birthdate;
                
                console.log('Searching for:', { name, birthDate: formattedBirthdate });
                
                // Make API call to search for photos
                const response = await fetch('/api/search-commencement-photos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: name,
                        birthDate: formattedBirthdate
                    })
                });
                
                if (!response.ok) {
                    throw new Error('Failed to search photos');
                }
                
                const photos = await response.json();
                console.log('API response:', photos);
                
                if (Array.isArray(photos) && photos.length > 0) {
                    showPhotoGallery(photos);
                } else {
                    showError();
                }
            } catch (error) {
                console.error('Error searching photos:', error);
                showError();
            }
        });

        // Handle select all checkbox
        selectAllCheckbox.addEventListener('change', function() {
            const photoCheckboxes = document.querySelectorAll('.photo-checkbox');
            const selectAllInput = selectAllCheckbox;
            photoCheckboxes.forEach(checkbox => {
                if (checkbox instanceof HTMLInputElement && selectAllInput instanceof HTMLInputElement) {
                    checkbox.checked = selectAllInput.checked;
                }
            });
        });

        // Handle download selected
        downloadSelectedBtn.addEventListener('click', async function() {
            const selectedCheckboxes = document.querySelectorAll('.photo-checkbox:checked');
            if (selectedCheckboxes.length === 0) {
                alert('Please select at least one photo to download.');
                return;
            }
            
            // Show loading state for download
            const originalText = downloadSelectedBtn.textContent;
            downloadSelectedBtn.textContent = 'Downloading...';
            if (downloadSelectedBtn instanceof HTMLButtonElement) {
                downloadSelectedBtn.disabled = true;
            }
            
            let downloadCount = 0;
            const totalDownloads = selectedCheckboxes.length;
            
            // Use for...of loop instead of forEach for async operations
            for (const checkbox of selectedCheckboxes) {
                if (checkbox instanceof HTMLInputElement) {
                    const photoId = checkbox.getAttribute('data-photo-id');
                    const photo = lastSearchedPhotos.find(p => p._id === photoId);
                    
                    const imageUrl = photo.mainImage?.asset?.url || photo.mainImage?.url;
                    if (photo && photo.mainImage && imageUrl) {
                        try {
                            const response = await fetch(imageUrl);
                            const blob = await response.blob();
                            const url = window.URL.createObjectURL(blob);
                            const link = document.createElement('a');
                            link.href = url;
                            link.download = (photo.graduate?.graduate || 'GraduationPhoto') + '.jpg';
                            document.body.appendChild(link);
                            link.click();
                            document.body.removeChild(link);
                            window.URL.revokeObjectURL(url);
                            
                            downloadCount++;
                            if (downloadCount === totalDownloads) {
                                // Reset button state
                                downloadSelectedBtn.textContent = originalText;
                                if (downloadSelectedBtn instanceof HTMLButtonElement) {
                                    downloadSelectedBtn.disabled = false;
                                }
                                
                                // Show success message
                                if (totalDownloads === 1) {
                                    alert('Photo downloaded successfully!');
                                } else {
                                    alert(`${totalDownloads} photos downloaded successfully!`);
                                }
                            }
                        } catch (err) {
                            console.error('Failed to download image:', err);
                            alert('Failed to download image.');
                            downloadSelectedBtn.textContent = originalText;
                            if (downloadSelectedBtn instanceof HTMLButtonElement) {
                                downloadSelectedBtn.disabled = false;
                            }
                            }
                        }
                    }
                }
            });

        // Calendar functionality
        let calendarCurrentDate = new Date();
        let calendarSelectedDate: Date | null = null;
        const calendarModal = document.getElementById('calendarModal') as HTMLElement;
        const calendarButton = document.getElementById('calendarButton') as HTMLButtonElement;
        const closeCalendar = document.getElementById('closeCalendar') as HTMLButtonElement;
        const prevMonth = document.getElementById('prevMonth') as HTMLButtonElement;
        const nextMonth = document.getElementById('nextMonth') as HTMLButtonElement;
        const monthSelect = document.getElementById('monthSelect') as HTMLSelectElement;
        const yearSelect = document.getElementById('yearSelect') as HTMLSelectElement;
        const calendarDays = document.getElementById('calendarDays') as HTMLElement;
        const confirmDate = document.getElementById('confirmDate') as HTMLButtonElement;
        const clearDate = document.getElementById('clearDate') as HTMLButtonElement;

        // Open calendar
        calendarButton.addEventListener('click', function() {
            calendarModal.classList.remove('hidden');
            populateYearSelect();
            renderCalendar();
        });

        // Close calendar
        closeCalendar.addEventListener('click', function() {
            calendarModal.classList.add('hidden');
        });

        // Close calendar when clicking outside
        calendarModal.addEventListener('click', function(e) {
            if (e.target === calendarModal) {
                calendarModal.classList.add('hidden');
            }
        });

        // Navigate months
        prevMonth.addEventListener('click', function() {
            calendarCurrentDate.setMonth(calendarCurrentDate.getMonth() - 1);
            updateSelectors();
            renderCalendar();
        });

        nextMonth.addEventListener('click', function() {
            calendarCurrentDate.setMonth(calendarCurrentDate.getMonth() + 1);
            updateSelectors();
            renderCalendar();
        });

        // Month selector change
        monthSelect.addEventListener('change', function() {
            calendarCurrentDate.setMonth(parseInt(monthSelect.value));
            renderCalendar();
        });

        // Year selector change
        yearSelect.addEventListener('change', function() {
            calendarCurrentDate.setFullYear(parseInt(yearSelect.value));
            renderCalendar();
        });

        // Confirm date selection
        confirmDate.addEventListener('click', function() {
            if (calendarSelectedDate) {
                const formattedDate = formatDateForInput(calendarSelectedDate);
                const birthdateInput = document.getElementById('searchBirthdate') as HTMLInputElement;
                birthdateInput.value = formattedDate;
                calendarModal.classList.add('hidden');
                // Hide error if it was showing
                const birthdateError = document.getElementById('birthdateError');
                if (birthdateError && !birthdateError.classList.contains('hidden')) {
                    birthdateError.classList.add('hidden');
                    birthdateError.classList.remove('animate-fade-in');
                }
                // Prevent any automatic form submission
                event?.preventDefault();
                event?.stopPropagation();
            }
        });

        // Clear date
        clearDate.addEventListener('click', function() {
            calendarSelectedDate = null;
            const birthdateInput = document.getElementById('searchBirthdate') as HTMLInputElement;
            birthdateInput.value = '';
            renderCalendar();
        });

        // Populate year selector
        function populateYearSelect() {
            yearSelect.innerHTML = '';
            const currentYear = new Date().getFullYear();
            
            // Add years from 1950 to current year + 10
            for (let year = currentYear + 10; year >= 1950; year--) {
                const option = document.createElement('option');
                option.value = year.toString();
                option.textContent = year.toString();
                yearSelect.appendChild(option);
            }
        }

        // Update month and year selectors
        function updateSelectors() {
            monthSelect.value = calendarCurrentDate.getMonth().toString();
            yearSelect.value = calendarCurrentDate.getFullYear().toString();
        }

        // Render calendar
        function renderCalendar() {
            const year = calendarCurrentDate.getFullYear();
            const month = calendarCurrentDate.getMonth();
            
            // Update selectors
            updateSelectors();
            
            // Clear previous days
            calendarDays.innerHTML = '';
            
            // Get first day of month and number of days
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const startDate = new Date(firstDay);
            startDate.setDate(startDate.getDate() - firstDay.getDay());
            
            // Generate calendar grid
            for (let i = 0; i < 42; i++) {
                const date = new Date(startDate);
                date.setDate(startDate.getDate() + i);
                
                const dayElement = document.createElement('div');
                dayElement.className = 'text-center py-2 px-1 cursor-pointer hover:bg-gray-100 rounded transition-colors';
                
                // Check if date is in current month
                if (date.getMonth() === month) {
                    dayElement.textContent = String(date.getDate());
                    dayElement.classList.add('text-gray-900');
                    
                    // Check if this is the selected date
                    if (calendarSelectedDate && date.toDateString() === calendarSelectedDate.toDateString()) {
                        dayElement.classList.add('bg-msu-gold', 'text-white', 'font-semibold');
                        dayElement.classList.remove('hover:bg-gray-100');
                    }
                    
                    // Add click event
                    dayElement.addEventListener('click', function() {
                        calendarSelectedDate = new Date(date);
                        renderCalendar();
                    });
                } else {
                    dayElement.textContent = String(date.getDate());
                    dayElement.classList.add('text-gray-400');
                }
                
                calendarDays.appendChild(dayElement);
            }
        }

        // Format date for input (MM-DD-YYYY)
        function formatDateForInput(date: Date): string {
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            const year = date.getFullYear();
            return `${month}-${day}-${year}`;
        }

        // Add event listener to hide error on input (for manual typing)
        const birthdateInput = document.getElementById('searchBirthdate');
        birthdateInput.addEventListener('input', function() {
            const birthdateError = document.getElementById('birthdateError');
            if (!birthdateError.classList.contains('hidden')) {
                birthdateError.classList.add('hidden');
                birthdateError.classList.remove('animate-fade-in');
            }
            // Hide form error when user starts typing
            const formError = document.getElementById('formError');
            if (formError && !formError.classList.contains('hidden')) {
                formError.classList.add('hidden');
                formError.classList.remove('animate-fade-in');
            }
        });

        // Add event listener to hide errors when name input changes
        const nameInput = document.getElementById('searchName');
        nameInput.addEventListener('input', function() {
            // Hide form error when user starts typing
            const formError = document.getElementById('formError');
            if (formError && !formError.classList.contains('hidden')) {
                formError.classList.add('hidden');
                formError.classList.remove('animate-fade-in');
            }
            // Hide name error if it was showing
            const nameError = document.getElementById('nameError');
            if (nameError && !nameError.classList.contains('hidden')) {
                nameError.classList.add('hidden');
                nameError.classList.remove('animate-fade-in');
            }
        });

        // Add event listener to hide form error when calendar confirms date
        const calendarConfirmBtn = document.getElementById('confirmDate');
        if (calendarConfirmBtn) {
            calendarConfirmBtn.addEventListener('click', function() {
                // Hide form error when date is selected
                const formError = document.getElementById('formError');
                if (formError && !formError.classList.contains('hidden')) {
                    formError.classList.add('hidden');
                    formError.classList.remove('animate-fade-in');
                }
            });
        }

    });
</script>